

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu May 06 14:48:37 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F452 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     _LATB	set	3978
    61  0000                     _TRISD	set	3989
    62  0000                     _TRISB	set	3987
    63  0000                     _TRISC	set	3988
    64  0000                     _PORTCbits	set	3970
    65  0000                     _PORTDbits	set	3971
    66  0000                     _TRISA	set	3986
    67  0000                     _OSCCON	set	4051
    68  0000                     _RA0	set	31744
    69  0000                     _LATD1	set	31841
    70  0000                     _LATD0	set	31840
    71  0000                     _RA2	set	31746
    72  0000                     _RA1	set	31745
    73                           
    74                           	psect	smallconst
    75  000600                     __psmallconst:
    76                           	callstack 0
    77  000600  00                 	db	0
    78  000601                     STR_12:
    79  000601  45                 	db	69	;'E'
    80  000602  6E                 	db	110	;'n'
    81  000603  74                 	db	116	;'t'
    82  000604  72                 	db	114	;'r'
    83  000605  79                 	db	121	;'y'
    84  000606  20                 	db	32
    85  000607  47                 	db	71	;'G'
    86  000608  61                 	db	97	;'a'
    87  000609  74                 	db	116	;'t'
    88  00060A  65                 	db	101	;'e'
    89  00060B  20                 	db	32
    90  00060C  4F                 	db	79	;'O'
    91  00060D  70                 	db	112	;'p'
    92  00060E  65                 	db	101	;'e'
    93  00060F  6E                 	db	110	;'n'
    94  000610  00                 	db	0
    95  000611                     STR_10:
    96  000611  45                 	db	69	;'E'
    97  000612  6E                 	db	110	;'n'
    98  000613  74                 	db	116	;'t'
    99  000614  65                 	db	101	;'e'
   100  000615  72                 	db	114	;'r'
   101  000616  20                 	db	32
   102  000617  50                 	db	80	;'P'
   103  000618  61                 	db	97	;'a'
   104  000619  73                 	db	115	;'s'
   105  00061A  73                 	db	115	;'s'
   106  00061B  77                 	db	119	;'w'
   107  00061C  6F                 	db	111	;'o'
   108  00061D  72                 	db	114	;'r'
   109  00061E  64                 	db	100	;'d'
   110  00061F  00                 	db	0
   111  000620                     STR_3:
   112  000620  45                 	db	69	;'E'
   113  000621  78                 	db	120	;'x'
   114  000622  69                 	db	105	;'i'
   115  000623  74                 	db	116	;'t'
   116  000624  20                 	db	32
   117  000625  47                 	db	71	;'G'
   118  000626  61                 	db	97	;'a'
   119  000627  74                 	db	116	;'t'
   120  000628  65                 	db	101	;'e'
   121  000629  20                 	db	32
   122  00062A  4F                 	db	79	;'O'
   123  00062B  70                 	db	112	;'p'
   124  00062C  65                 	db	101	;'e'
   125  00062D  6E                 	db	110	;'n'
   126  00062E  00                 	db	0
   127  00062F                     STR_1:
   128  00062F  53                 	db	83	;'S'
   129  000630  61                 	db	97	;'a'
   130  000631  6E                 	db	110	;'n'
   131  000632  64                 	db	100	;'d'
   132  000633  73                 	db	115	;'s'
   133  000634  20                 	db	32
   134  000635  50                 	db	80	;'P'
   135  000636  61                 	db	97	;'a'
   136  000637  72                 	db	114	;'r'
   137  000638  6B                 	db	107	;'k'
   138  000639  69                 	db	105	;'i'
   139  00063A  6E                 	db	110	;'n'
   140  00063B  67                 	db	103	;'g'
   141  00063C  00                 	db	0
   142  00063D                     STR_5:
   143  00063D  45                 	db	69	;'E'
   144  00063E  6E                 	db	110	;'n'
   145  00063F  74                 	db	116	;'t'
   146  000640  65                 	db	101	;'e'
   147  000641  72                 	db	114	;'r'
   148  000642  20                 	db	32
   149  000643  55                 	db	85	;'U'
   150  000644  53                 	db	83	;'S'
   151  000645  45                 	db	69	;'E'
   152  000646  52                 	db	82	;'R'
   153  000647  00                 	db	0
   154  000648                     STR_4:
   155  000648  45                 	db	69	;'E'
   156  000649  6D                 	db	109	;'m'
   157  00064A  65                 	db	101	;'e'
   158  00064B  72                 	db	114	;'r'
   159  00064C  67                 	db	103	;'g'
   160  00064D  65                 	db	101	;'e'
   161  00064E  6E                 	db	110	;'n'
   162  00064F  63                 	db	99	;'c'
   163  000650  79                 	db	121	;'y'
   164  000651  00                 	db	0
   165  000652                     STR_2:
   166  000652  4C                 	db	76	;'L'
   167  000653  6F                 	db	111	;'o'
   168  000654  74                 	db	116	;'t'
   169  000655  20                 	db	32
   170  000656  46                 	db	70	;'F'
   171  000657  75                 	db	117	;'u'
   172  000658  6C                 	db	108	;'l'
   173  000659  6C                 	db	108	;'l'
   174  00065A  00                 	db	0
   175  00065B                     STR_9:
   176  00065B  57                 	db	87	;'W'
   177  00065C  52                 	db	82	;'R'
   178  00065D  4F                 	db	79	;'O'
   179  00065E  4E                 	db	78	;'N'
   180  00065F  47                 	db	71	;'G'
   181  000660  00                 	db	0
   182  000661                     STR_6:
   183  000661  50                 	db	80	;'P'
   184  000662  41                 	db	65	;'A'
   185  000663  53                 	db	83	;'S'
   186  000664  53                 	db	83	;'S'
   187  000665  00                 	db	0
   188  000666  00                 	db	0	; dummy byte at the end
   189  0000                     
   190                           ; #config settings
   191                           
   192                           	psect	cinit
   193  00121E                     __pcinit:
   194                           	callstack 0
   195  00121E                     start_initialization:
   196                           	callstack 0
   197  00121E                     __initialization:
   198                           	callstack 0
   199                           
   200                           ; Clear objects allocated to COMRAM (19 bytes)
   201  00121E  EE00  F001         	lfsr	0,__pbssCOMRAM
   202  001222  0E13               	movlw	19
   203  001224                     clear_0:
   204  001224  6AEE               	clrf	postinc0,c
   205  001226  06E8               	decf	wreg,f,c
   206  001228  E1FD               	bnz	clear_0
   207  00122A                     end_of_initialization:
   208                           	callstack 0
   209  00122A                     __end_of__initialization:
   210                           	callstack 0
   211  00122A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   212  00122C  6EF8               	movwf	tblptru,c
   213  00122E  0E06               	movlw	high __Lsmallconst
   214  001230  6EF7               	movwf	tblptrh,c
   215  001232  0100               	movlb	0
   216  001234  EF96  F007         	goto	_main	;jump to C main() function
   217                           
   218                           	psect	bssCOMRAM
   219  000001                     __pbssCOMRAM:
   220                           	callstack 0
   221  000001                     _UserC:
   222                           	callstack 0
   223  000001                     	ds	2
   224  000003                     _UserB:
   225                           	callstack 0
   226  000003                     	ds	2
   227  000005                     _UserA:
   228                           	callstack 0
   229  000005                     	ds	2
   230  000007                     _vehicle:
   231                           	callstack 0
   232  000007                     	ds	2
   233  000009                     _EnterPassword:
   234                           	callstack 0
   235  000009                     	ds	1
   236  00000A                     _Pass5:
   237                           	callstack 0
   238  00000A                     	ds	1
   239  00000B                     _Pass4:
   240                           	callstack 0
   241  00000B                     	ds	1
   242  00000C                     _Pass3:
   243                           	callstack 0
   244  00000C                     	ds	1
   245  00000D                     _Pass2:
   246                           	callstack 0
   247  00000D                     	ds	1
   248  00000E                     _Pass1:
   249                           	callstack 0
   250  00000E                     	ds	1
   251  00000F                     _EnterUser:
   252                           	callstack 0
   253  00000F                     	ds	1
   254  000010                     _User3:
   255                           	callstack 0
   256  000010                     	ds	1
   257  000011                     _User2:
   258                           	callstack 0
   259  000011                     	ds	1
   260  000012                     _User1:
   261                           	callstack 0
   262  000012                     	ds	1
   263  000013                     _key:
   264                           	callstack 0
   265  000013                     	ds	1
   266                           
   267                           	psect	cstackCOMRAM
   268  000014                     __pcstackCOMRAM:
   269                           	callstack 0
   270  000014                     ??_keypad_scanner:
   271  000014                     ??_LCD_Command:
   272  000014                     LCD_Char@dat:
   273                           	callstack 0
   274                           
   275                           ; 1 bytes @ 0x0
   276  000014                     	ds	1
   277  000015                     GetKey@key:
   278                           	callstack 0
   279  000015                     LCD_Command@cmd:
   280                           	callstack 0
   281  000015                     LCD_String@msg:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x1
   285  000015                     	ds	1
   286  000016                     ??_LCD_Init:
   287  000016                     LCD_GoTo@line:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x2
   291  000016                     	ds	1
   292  000017                     ??_LCD_GoTo:
   293                           
   294                           ; 1 bytes @ 0x3
   295  000017                     	ds	2
   296  000019                     _LCD_GoTo$247:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x5
   300  000019                     	ds	2
   301  00001B                     LCD_GoTo@column:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0x7
   305  00001B                     	ds	1
   306  00001C                     ??_Ask_User:
   307  00001C                     ??_Ask_Password:
   308                           
   309                           ; 1 bytes @ 0x8
   310  00001C                     	ds	2
   311  00001E                     ??_main:
   312                           
   313                           ; 1 bytes @ 0xA
   314  00001E                     	ds	2
   315  000020                     main@i:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0xC
   319  000020                     	ds	2
   320                           
   321 ;;
   322 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   323 ;;
   324 ;; *************** function _main *****************
   325 ;; Defined at:
   326 ;;		line 43 in file "parkinggarage.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;  i               2   12[COMRAM] int 
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   340 ;;      Params:         0       0       0       0       0       0       0
   341 ;;      Locals:         2       0       0       0       0       0       0
   342 ;;      Temps:          2       0       0       0       0       0       0
   343 ;;      Totals:         4       0       0       0       0       0       0
   344 ;;Total ram usage:        4 bytes
   345 ;; Hardware stack levels required when called:    3
   346 ;; This function calls:
   347 ;;		_Ask_Password
   348 ;;		_Ask_User
   349 ;;		_Keypad_Init
   350 ;;		_LCD_Clear
   351 ;;		_LCD_Init
   352 ;;		_LCD_String
   353 ;; This function is called by:
   354 ;;		Startup code after reset
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358                           	psect	text0
   359  000F2C                     __ptext0:
   360                           	callstack 0
   361  000F2C                     _main:
   362                           	callstack 28
   363  000F2C  FFFF               	dw	65535	; assembler added errata NOP
   364                           
   365                           ;parkinggarage.c: 45:     OSCCON = 0x72;
   366  000F2E  0E72               	movlw	114
   367  000F30  6ED3               	movwf	211,c	;volatile
   368  000F32                     
   369                           ;parkinggarage.c: 46:     Keypad_Init();
   370  000F32  EC25  F009         	call	_Keypad_Init	;wreg free
   371  000F36                     
   372                           ;parkinggarage.c: 47:     LCD_Init();
   373  000F36  ECBD  F008         	call	_LCD_Init	;wreg free
   374                           
   375                           ;parkinggarage.c: 48:     TRISA = 0x00;
   376  000F3A  0E00               	movlw	0
   377  000F3C  6E92               	movwf	146,c	;volatile
   378  000F3E                     
   379                           ;parkinggarage.c: 50:   LCD_String("Sands Parking");
   380  000F3E  0E2F               	movlw	low STR_1
   381  000F40  6E15               	movwf	LCD_String@msg^0,c
   382  000F42  0E06               	movlw	high STR_1
   383  000F44  6E16               	movwf	(LCD_String@msg+1)^0,c
   384  000F46  EC9A  F008         	call	_LCD_String	;wreg free
   385  000F4A                     
   386                           ;parkinggarage.c: 51:    _delay((unsigned long)((4000)*(4000000/4000.0)));
   387  000F4A  0E10               	movlw	16
   388  000F4C  6E1F               	movwf	(??_main+1)^0,c
   389  000F4E  0E3B               	movlw	59
   390  000F50  6E1E               	movwf	??_main^0,c
   391  000F52  0E99               	movlw	153
   392  000F54                     u1107:
   393  000F54  FFFF               	dw	65535	; errata NOP
   394  000F56  2EE8               	decfsz	wreg,f,c
   395  000F58  D7FD               	bra	u1107
   396  000F5A  2E1E               	decfsz	??_main^0,f,c
   397  000F5C  D7FB               	bra	u1107
   398  000F5E  2E1F               	decfsz	(??_main+1)^0,f,c
   399  000F60  D7F9               	bra	u1107
   400  000F62  D000               	nop2	
   401  000F64                     
   402                           ;parkinggarage.c: 52:    LCD_Clear();
   403  000F64  EC1C  F009         	call	_LCD_Clear	;wreg free
   404  000F68                     l1571:
   405  000F68  FFFF               	dw	65535	; assembler added errata NOP
   406                           
   407                           ;parkinggarage.c: 55:    {;parkinggarage.c: 56:       LCD_Init();
   408  000F6A  ECBD  F008         	call	_LCD_Init	;wreg free
   409  000F6E                     
   410                           ;parkinggarage.c: 58:        if(PORTDbits.RD2 == 1)
   411  000F6E  A483               	btfss	131,2,c	;volatile
   412  000F70  EFBC  F007         	goto	u1051
   413  000F74  EFBF  F007         	goto	u1050
   414  000F78                     u1051:
   415  000F78  FFFF               	dw	65535	; assembler added errata NOP
   416  000F7A  EFF1  F007         	goto	l1587
   417  000F7E                     u1050:
   418  000F7E  FFFF               	dw	65535	; assembler added errata NOP
   419  000F80                     
   420                           ;parkinggarage.c: 59:        {;parkinggarage.c: 60:           if(vehicle == 10)
   421  000F80  0E0A               	movlw	10
   422  000F82  1807               	xorwf	_vehicle^0,w,c
   423  000F84  1008               	iorwf	(_vehicle+1)^0,w,c
   424  000F86  A4D8               	btfss	status,2,c
   425  000F88  EFC8  F007         	goto	u1061
   426  000F8C  EFCB  F007         	goto	u1060
   427  000F90                     u1061:
   428  000F90  FFFF               	dw	65535	; assembler added errata NOP
   429  000F92  EFE0  F007         	goto	l1581
   430  000F96                     u1060:
   431  000F96  FFFF               	dw	65535	; assembler added errata NOP
   432  000F98                     
   433                           ;parkinggarage.c: 61:           {;parkinggarage.c: 62:               LCD_String("Lot Ful
      +                          l");
   434  000F98  0E52               	movlw	low STR_2
   435  000F9A  6E15               	movwf	LCD_String@msg^0,c
   436  000F9C  0E06               	movlw	high STR_2
   437  000F9E  6E16               	movwf	(LCD_String@msg+1)^0,c
   438  000FA0  EC9A  F008         	call	_LCD_String	;wreg free
   439  000FA4                     
   440                           ;parkinggarage.c: 63:               _delay((unsigned long)((2000)*(4000000/4000.0)));
   441  000FA4  0E08               	movlw	8
   442  000FA6  6E1F               	movwf	(??_main+1)^0,c
   443  000FA8  0E9E               	movlw	158
   444  000FAA  6E1E               	movwf	??_main^0,c
   445  000FAC  0E4C               	movlw	76
   446  000FAE                     u1117:
   447  000FAE  FFFF               	dw	65535	; errata NOP
   448  000FB0  2EE8               	decfsz	wreg,f,c
   449  000FB2  D7FD               	bra	u1117
   450  000FB4  2E1E               	decfsz	??_main^0,f,c
   451  000FB6  D7FB               	bra	u1117
   452  000FB8  2E1F               	decfsz	(??_main+1)^0,f,c
   453  000FBA  D7F9               	bra	u1117
   454                           
   455                           ;parkinggarage.c: 64:           }
   456  000FBC  EFF1  F007         	goto	l1587
   457  000FC0                     l1581:
   458  000FC0  FFFF               	dw	65535	; assembler added errata NOP
   459                           
   460                           ;parkinggarage.c: 66:           {;parkinggarage.c: 68:               Ask_User();
   461  000FC2  EC9E  F006         	call	_Ask_User	;wreg free
   462  000FC6                     
   463                           ;parkinggarage.c: 69:               _delay((unsigned long)((2000)*(4000000/4000.0)));
   464  000FC6  0E08               	movlw	8
   465  000FC8  6E1F               	movwf	(??_main+1)^0,c
   466  000FCA  0E9E               	movlw	158
   467  000FCC  6E1E               	movwf	??_main^0,c
   468  000FCE  0E4C               	movlw	76
   469  000FD0                     u1127:
   470  000FD0  FFFF               	dw	65535	; errata NOP
   471  000FD2  2EE8               	decfsz	wreg,f,c
   472  000FD4  D7FD               	bra	u1127
   473  000FD6  2E1E               	decfsz	??_main^0,f,c
   474  000FD8  D7FB               	bra	u1127
   475  000FDA  2E1F               	decfsz	(??_main+1)^0,f,c
   476  000FDC  D7F9               	bra	u1127
   477  000FDE                     
   478                           ;parkinggarage.c: 70:               Ask_Password();
   479  000FDE  EC34  F003         	call	_Ask_Password	;wreg free
   480  000FE2                     l1587:
   481  000FE2  FFFF               	dw	65535	; assembler added errata NOP
   482                           
   483                           ;parkinggarage.c: 75:        if(PORTDbits.RD3 == 1)
   484  000FE4  A683               	btfss	131,3,c	;volatile
   485  000FE6  EFF7  F007         	goto	u1071
   486  000FEA  EFFA  F007         	goto	u1070
   487  000FEE                     u1071:
   488  000FEE  FFFF               	dw	65535	; assembler added errata NOP
   489  000FF0  EF12  F008         	goto	l1599
   490  000FF4                     u1070:
   491  000FF4  FFFF               	dw	65535	; assembler added errata NOP
   492  000FF6                     
   493                           ;parkinggarage.c: 76:        {;parkinggarage.c: 77:         LCD_String("Exit Gate Open")
      +                          ;
   494  000FF6  0E20               	movlw	low STR_3
   495  000FF8  6E15               	movwf	LCD_String@msg^0,c
   496  000FFA  0E06               	movlw	high STR_3
   497  000FFC  6E16               	movwf	(LCD_String@msg+1)^0,c
   498  000FFE  EC9A  F008         	call	_LCD_String	;wreg free
   499  001002                     
   500                           ;parkinggarage.c: 78:          RA1 = 1;
   501  001002  8280               	bsf	3968,1,c	;volatile
   502  001004                     
   503                           ;parkinggarage.c: 79:          _delay((unsigned long)((2000)*(4000000/4000.0)));
   504  001004  0E08               	movlw	8
   505  001006  6E1F               	movwf	(??_main+1)^0,c
   506  001008  0E9E               	movlw	158
   507  00100A  6E1E               	movwf	??_main^0,c
   508  00100C  0E4C               	movlw	76
   509  00100E                     u1137:
   510  00100E  FFFF               	dw	65535	; errata NOP
   511  001010  2EE8               	decfsz	wreg,f,c
   512  001012  D7FD               	bra	u1137
   513  001014  2E1E               	decfsz	??_main^0,f,c
   514  001016  D7FB               	bra	u1137
   515  001018  2E1F               	decfsz	(??_main+1)^0,f,c
   516  00101A  D7F9               	bra	u1137
   517  00101C                     
   518                           ;parkinggarage.c: 80:          vehicle--;
   519  00101C  0607               	decf	_vehicle^0,f,c
   520  00101E  A0D8               	btfss	status,0,c
   521  001020  0608               	decf	(_vehicle+1)^0,f,c
   522  001022                     
   523                           ;parkinggarage.c: 81:          RA1 = 0;
   524  001022  9280               	bcf	3968,1,c	;volatile
   525  001024                     l1599:
   526  001024  FFFF               	dw	65535	; assembler added errata NOP
   527                           
   528                           ;parkinggarage.c: 84:        if(PORTDbits.RD4 == 1)
   529  001026  A883               	btfss	131,4,c	;volatile
   530  001028  EF18  F008         	goto	u1081
   531  00102C  EF1B  F008         	goto	u1080
   532  001030                     u1081:
   533  001030  FFFF               	dw	65535	; assembler added errata NOP
   534  001032  EFB4  F007         	goto	l1571
   535  001036                     u1080:
   536  001036  FFFF               	dw	65535	; assembler added errata NOP
   537  001038                     
   538                           ;parkinggarage.c: 85:        {;parkinggarage.c: 86:         RA1 = 1;
   539  001038  8280               	bsf	3968,1,c	;volatile
   540  00103A                     
   541                           ;parkinggarage.c: 88:           LCD_String("Emergency");
   542  00103A  0E48               	movlw	low STR_4
   543  00103C  6E15               	movwf	LCD_String@msg^0,c
   544  00103E  0E06               	movlw	high STR_4
   545  001040  6E16               	movwf	(LCD_String@msg+1)^0,c
   546  001042  EC9A  F008         	call	_LCD_String	;wreg free
   547  001046                     
   548                           ;parkinggarage.c: 89:           for(int i =0; i < 10; i++)
   549  001046  0E00               	movlw	0
   550  001048  6E21               	movwf	(main@i+1)^0,c
   551  00104A  0E00               	movlw	0
   552  00104C  6E20               	movwf	main@i^0,c
   553  00104E                     l85:
   554  00104E  FFFF               	dw	65535	; assembler added errata NOP
   555                           
   556                           ;parkinggarage.c: 90:           {;parkinggarage.c: 92:             RA2 = 1;
   557  001050  8480               	bsf	3968,2,c	;volatile
   558  001052                     
   559                           ;parkinggarage.c: 93:             _delay((unsigned long)((150)*(4000000/4000.0)));
   560  001052  0E93               	movlw	147
   561  001054  6E1E               	movwf	??_main^0,c
   562  001056  0E32               	movlw	50
   563  001058                     u1147:
   564  001058  FFFF               	dw	65535	; errata NOP
   565  00105A  2EE8               	decfsz	wreg,f,c
   566  00105C  D7FD               	bra	u1147
   567  00105E  2E1E               	decfsz	??_main^0,f,c
   568  001060  D7FB               	bra	u1147
   569  001062                     
   570                           ;parkinggarage.c: 94:             RA2 = 0;
   571  001062  9480               	bcf	3968,2,c	;volatile
   572                           
   573                           ;parkinggarage.c: 95:             _delay((unsigned long)((150)*(4000000/4000.0)));
   574  001064  0E93               	movlw	147
   575  001066  6E1E               	movwf	??_main^0,c
   576  001068  0E32               	movlw	50
   577  00106A                     u1157:
   578  00106A  FFFF               	dw	65535	; errata NOP
   579  00106C  2EE8               	decfsz	wreg,f,c
   580  00106E  D7FD               	bra	u1157
   581  001070  2E1E               	decfsz	??_main^0,f,c
   582  001072  D7FB               	bra	u1157
   583  001074                     
   584                           ;parkinggarage.c: 97:           }
   585  001074  4A20               	infsnz	main@i^0,f,c
   586  001076  2A21               	incf	(main@i+1)^0,f,c
   587  001078  BE21               	btfsc	(main@i+1)^0,7,c
   588  00107A  EF48  F008         	goto	u1091
   589  00107E  5021               	movf	(main@i+1)^0,w,c
   590  001080  E10A               	bnz	u1090
   591  001082  0E0A               	movlw	10
   592  001084  5C20               	subwf	main@i^0,w,c
   593  001086  A0D8               	btfss	status,0,c
   594  001088  EF48  F008         	goto	u1091
   595  00108C  EF4B  F008         	goto	u1090
   596  001090                     u1091:
   597  001090  FFFF               	dw	65535	; assembler added errata NOP
   598  001092  EF27  F008         	goto	l85
   599  001096                     u1090:
   600  001096  FFFF               	dw	65535	; assembler added errata NOP
   601  001098                     
   602                           ;parkinggarage.c: 98:           RA1 = 0;
   603  001098  9280               	bcf	3968,1,c	;volatile
   604  00109A                     
   605                           ;parkinggarage.c: 99:          vehicle = 0;
   606  00109A  0E00               	movlw	0
   607  00109C  6E08               	movwf	(_vehicle+1)^0,c
   608  00109E  0E00               	movlw	0
   609  0010A0  6E07               	movwf	_vehicle^0,c
   610  0010A2  EFB4  F007         	goto	l1571
   611  0010A6  EF01  F000         	goto	start
   612  0010AA                     __end_of_main:
   613                           	callstack 0
   614                           
   615 ;; *************** function _LCD_Init *****************
   616 ;; Defined at:
   617 ;;		line 151 in file "parkinggarage.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, status,2, cstack
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   631 ;;      Params:         0       0       0       0       0       0       0
   632 ;;      Locals:         0       0       0       0       0       0       0
   633 ;;      Temps:          1       0       0       0       0       0       0
   634 ;;      Totals:         1       0       0       0       0       0       0
   635 ;;Total ram usage:        1 bytes
   636 ;; Hardware stack levels used:    1
   637 ;; Hardware stack levels required when called:    1
   638 ;; This function calls:
   639 ;;		_LCD_Command
   640 ;; This function is called by:
   641 ;;		_main
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text1
   646  00117A                     __ptext1:
   647                           	callstack 0
   648  00117A                     _LCD_Init:
   649                           	callstack 0
   650  00117A  FFFF               	dw	65535	; assembler added errata NOP
   651  00117C                     
   652                           ;parkinggarage.c: 153:         _delay((unsigned long)((15)*(4000000/4000.0)));
   653  00117C  0E0F               	movlw	15
   654  00117E  6E16               	movwf	??_LCD_Init^0,c
   655  001180  0E9E               	movlw	158
   656  001182                     u1167:
   657  001182  FFFF               	dw	65535	; errata NOP
   658  001184  2EE8               	decfsz	wreg,f,c
   659  001186  D7FD               	bra	u1167
   660  001188  2E16               	decfsz	??_LCD_Init^0,f,c
   661  00118A  D7FB               	bra	u1167
   662  00118C                     
   663                           ;parkinggarage.c: 154:         TRISB = 0x00;
   664  00118C  0E00               	movlw	0
   665  00118E  6E93               	movwf	147,c	;volatile
   666  001190                     
   667                           ;parkinggarage.c: 155:         TRISD = 0xFC;
   668  001190  0EFC               	movlw	252
   669  001192  6E95               	movwf	149,c	;volatile
   670  001194                     
   671                           ;parkinggarage.c: 156:         LCD_Command(0x38);
   672  001194  0E38               	movlw	56
   673  001196  ECF0  F008         	call	_LCD_Command
   674  00119A                     
   675                           ;parkinggarage.c: 157:         LCD_Command(0x01);
   676  00119A  0E01               	movlw	1
   677  00119C  ECF0  F008         	call	_LCD_Command
   678  0011A0                     
   679                           ;parkinggarage.c: 158:         LCD_Command(0x0C);
   680  0011A0  0E0C               	movlw	12
   681  0011A2  ECF0  F008         	call	_LCD_Command
   682  0011A6                     
   683                           ;parkinggarage.c: 159:         LCD_Command(0x06);
   684  0011A6  0E06               	movlw	6
   685  0011A8  ECF0  F008         	call	_LCD_Command
   686  0011AC  0012               	return		;funcret
   687  0011AE  FFFF               	dw	65535	; errata NOP
   688  0011B0                     __end_of_LCD_Init:
   689                           	callstack 0
   690                           
   691 ;; *************** function _Keypad_Init *****************
   692 ;; Defined at:
   693 ;;		line 145 in file "parkinggarage.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;		None
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg, status,2
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   707 ;;      Params:         0       0       0       0       0       0       0
   708 ;;      Locals:         0       0       0       0       0       0       0
   709 ;;      Temps:          0       0       0       0       0       0       0
   710 ;;      Totals:         0       0       0       0       0       0       0
   711 ;;Total ram usage:        0 bytes
   712 ;; Hardware stack levels used:    1
   713 ;; This function calls:
   714 ;;		Nothing
   715 ;; This function is called by:
   716 ;;		_main
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	text2
   721  00124A                     __ptext2:
   722                           	callstack 0
   723  00124A                     _Keypad_Init:
   724                           	callstack 0
   725  00124A  FFFF               	dw	65535	; assembler added errata NOP
   726  00124C                     
   727                           ;parkinggarage.c: 147:     TRISC = 0xF0;
   728  00124C  0EF0               	movlw	240
   729  00124E  6E94               	movwf	148,c	;volatile
   730  001250  0012               	return		;funcret
   731  001252  FFFF               	dw	65535	; errata NOP
   732  001254                     __end_of_Keypad_Init:
   733                           	callstack 0
   734                           
   735 ;; *************** function _Ask_User *****************
   736 ;; Defined at:
   737 ;;		line 206 in file "parkinggarage.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   751 ;;      Params:         0       0       0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0       0       0
   753 ;;      Temps:          2       0       0       0       0       0       0
   754 ;;      Totals:         2       0       0       0       0       0       0
   755 ;;Total ram usage:        2 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    2
   758 ;; This function calls:
   759 ;;		_GetKey
   760 ;;		_LCD_Char
   761 ;;		_LCD_Clear
   762 ;;		_LCD_GoTo
   763 ;;		_LCD_String
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text3
   770  000D3C                     __ptext3:
   771                           	callstack 0
   772  000D3C                     _Ask_User:
   773                           	callstack 0
   774  000D3C  FFFF               	dw	65535	; assembler added errata NOP
   775  000D3E                     
   776                           ;parkinggarage.c: 209:         LCD_Clear();
   777  000D3E  EC1C  F009         	call	_LCD_Clear	;wreg free
   778  000D42                     
   779                           ;parkinggarage.c: 210:         LCD_String("Enter USER");
   780  000D42  0E3D               	movlw	low STR_5
   781  000D44  6E15               	movwf	LCD_String@msg^0,c
   782  000D46  0E06               	movlw	high STR_5
   783  000D48  6E16               	movwf	(LCD_String@msg+1)^0,c
   784  000D4A  EC9A  F008         	call	_LCD_String	;wreg free
   785  000D4E                     
   786                           ;parkinggarage.c: 211:         LCD_GoTo(0,1);
   787  000D4E  0E01               	movlw	1
   788  000D50  6E16               	movwf	LCD_GoTo@line^0,c
   789  000D52  0E00               	movlw	0
   790  000D54  EC55  F008         	call	_LCD_GoTo
   791  000D58                     
   792                           ;parkinggarage.c: 212:         User1 = GetKey();
   793  000D58  ECD8  F008         	call	_GetKey	;wreg free
   794  000D5C  6E12               	movwf	_User1^0,c
   795  000D5E                     
   796                           ;parkinggarage.c: 213:         LCD_Char(User1);
   797  000D5E  5012               	movf	_User1^0,w,c
   798  000D60  EC01  F009         	call	_LCD_Char
   799  000D64                     
   800                           ;parkinggarage.c: 215:         LCD_GoTo(0,2);
   801  000D64  0E02               	movlw	2
   802  000D66  6E16               	movwf	LCD_GoTo@line^0,c
   803  000D68  0E00               	movlw	0
   804  000D6A  EC55  F008         	call	_LCD_GoTo
   805  000D6E                     
   806                           ;parkinggarage.c: 216:         User2 = GetKey();
   807  000D6E  ECD8  F008         	call	_GetKey	;wreg free
   808  000D72  6E11               	movwf	_User2^0,c
   809  000D74                     
   810                           ;parkinggarage.c: 217:         LCD_Char(User2);
   811  000D74  5011               	movf	_User2^0,w,c
   812  000D76  EC01  F009         	call	_LCD_Char
   813  000D7A                     
   814                           ;parkinggarage.c: 219:         LCD_GoTo(0,3);
   815  000D7A  0E03               	movlw	3
   816  000D7C  6E16               	movwf	LCD_GoTo@line^0,c
   817  000D7E  0E00               	movlw	0
   818  000D80  EC55  F008         	call	_LCD_GoTo
   819  000D84                     
   820                           ;parkinggarage.c: 220:         User3 = GetKey();
   821  000D84  ECD8  F008         	call	_GetKey	;wreg free
   822  000D88  6E10               	movwf	_User3^0,c
   823  000D8A                     
   824                           ;parkinggarage.c: 221:         LCD_Char(User3);
   825  000D8A  5010               	movf	_User3^0,w,c
   826  000D8C  EC01  F009         	call	_LCD_Char
   827  000D90                     
   828                           ;parkinggarage.c: 223:         EnterUser = GetKey();
   829  000D90  ECD8  F008         	call	_GetKey	;wreg free
   830  000D94  6E0F               	movwf	_EnterUser^0,c
   831  000D96                     
   832                           ;parkinggarage.c: 225:         if(User1 == '0' && User2 == '3' && User3 == '2' && EnterU
      +                          ser == '#')
   833  000D96  0E30               	movlw	48
   834  000D98  1812               	xorwf	_User1^0,w,c
   835  000D9A  A4D8               	btfss	status,2,c
   836  000D9C  EFD2  F006         	goto	u721
   837  000DA0  EFD5  F006         	goto	u720
   838  000DA4                     u721:
   839  000DA4  FFFF               	dw	65535	; assembler added errata NOP
   840  000DA6  EF12  F007         	goto	l1383
   841  000DAA                     u720:
   842  000DAA  FFFF               	dw	65535	; assembler added errata NOP
   843  000DAC  0E33               	movlw	51
   844  000DAE  1811               	xorwf	_User2^0,w,c
   845  000DB0  A4D8               	btfss	status,2,c
   846  000DB2  EFDD  F006         	goto	u731
   847  000DB6  EFE0  F006         	goto	u730
   848  000DBA                     u731:
   849  000DBA  FFFF               	dw	65535	; assembler added errata NOP
   850  000DBC  EF12  F007         	goto	l1383
   851  000DC0                     u730:
   852  000DC0  FFFF               	dw	65535	; assembler added errata NOP
   853  000DC2  0E32               	movlw	50
   854  000DC4  1810               	xorwf	_User3^0,w,c
   855  000DC6  A4D8               	btfss	status,2,c
   856  000DC8  EFE8  F006         	goto	u741
   857  000DCC  EFEB  F006         	goto	u740
   858  000DD0                     u741:
   859  000DD0  FFFF               	dw	65535	; assembler added errata NOP
   860  000DD2  EF12  F007         	goto	l1383
   861  000DD6                     u740:
   862  000DD6  FFFF               	dw	65535	; assembler added errata NOP
   863  000DD8  0E23               	movlw	35
   864  000DDA  180F               	xorwf	_EnterUser^0,w,c
   865  000DDC  A4D8               	btfss	status,2,c
   866  000DDE  EFF3  F006         	goto	u751
   867  000DE2  EFF6  F006         	goto	u750
   868  000DE6                     u751:
   869  000DE6  FFFF               	dw	65535	; assembler added errata NOP
   870  000DE8  EF12  F007         	goto	l1383
   871  000DEC                     u750:
   872  000DEC  FFFF               	dw	65535	; assembler added errata NOP
   873  000DEE                     
   874                           ;parkinggarage.c: 226:         {;parkinggarage.c: 227:             LCD_Clear();
   875  000DEE  EC1C  F009         	call	_LCD_Clear	;wreg free
   876  000DF2                     
   877                           ;parkinggarage.c: 228:             LCD_String("PASS");
   878  000DF2  0E61               	movlw	low STR_6
   879  000DF4  6E15               	movwf	LCD_String@msg^0,c
   880  000DF6  0E06               	movlw	high STR_6
   881  000DF8  6E16               	movwf	(LCD_String@msg+1)^0,c
   882  000DFA  EC9A  F008         	call	_LCD_String	;wreg free
   883  000DFE                     
   884                           ;parkinggarage.c: 229:             UserA = 1;
   885  000DFE  0E00               	movlw	0
   886  000E00  6E06               	movwf	(_UserA+1)^0,c
   887  000E02  0E01               	movlw	1
   888  000E04  6E05               	movwf	_UserA^0,c
   889  000E06                     l1381:
   890  000E06  FFFF               	dw	65535	; assembler added errata NOP
   891                           
   892                           ;parkinggarage.c: 230:             _delay((unsigned long)((2000)*(4000000/4000.0)));
   893  000E08  0E08               	movlw	8
   894  000E0A  6E1D               	movwf	(??_Ask_User+1)^0,c
   895  000E0C  0E9E               	movlw	158
   896  000E0E  6E1C               	movwf	??_Ask_User^0,c
   897  000E10  0E4C               	movlw	76
   898  000E12                     u1177:
   899  000E12  FFFF               	dw	65535	; errata NOP
   900  000E14  2EE8               	decfsz	wreg,f,c
   901  000E16  D7FD               	bra	u1177
   902  000E18  2E1C               	decfsz	??_Ask_User^0,f,c
   903  000E1A  D7FB               	bra	u1177
   904  000E1C  2E1D               	decfsz	(??_Ask_User+1)^0,f,c
   905  000E1E  D7F9               	bra	u1177
   906                           
   907                           ;parkinggarage.c: 231:         }
   908  000E20  EF93  F007         	goto	l186
   909  000E24                     l1383:
   910  000E24  FFFF               	dw	65535	; assembler added errata NOP
   911  000E26  0E36               	movlw	54
   912  000E28  1812               	xorwf	_User1^0,w,c
   913  000E2A  A4D8               	btfss	status,2,c
   914  000E2C  EF1A  F007         	goto	u761
   915  000E30  EF1D  F007         	goto	u760
   916  000E34                     u761:
   917  000E34  FFFF               	dw	65535	; assembler added errata NOP
   918  000E36  EF4D  F007         	goto	l1399
   919  000E3A                     u760:
   920  000E3A  FFFF               	dw	65535	; assembler added errata NOP
   921  000E3C  0E38               	movlw	56
   922  000E3E  1811               	xorwf	_User2^0,w,c
   923  000E40  A4D8               	btfss	status,2,c
   924  000E42  EF25  F007         	goto	u771
   925  000E46  EF28  F007         	goto	u770
   926  000E4A                     u771:
   927  000E4A  FFFF               	dw	65535	; assembler added errata NOP
   928  000E4C  EF4D  F007         	goto	l1399
   929  000E50                     u770:
   930  000E50  FFFF               	dw	65535	; assembler added errata NOP
   931  000E52  0E33               	movlw	51
   932  000E54  1810               	xorwf	_User3^0,w,c
   933  000E56  A4D8               	btfss	status,2,c
   934  000E58  EF30  F007         	goto	u781
   935  000E5C  EF33  F007         	goto	u780
   936  000E60                     u781:
   937  000E60  FFFF               	dw	65535	; assembler added errata NOP
   938  000E62  EF4D  F007         	goto	l1399
   939  000E66                     u780:
   940  000E66  FFFF               	dw	65535	; assembler added errata NOP
   941  000E68  0E23               	movlw	35
   942  000E6A  180F               	xorwf	_EnterUser^0,w,c
   943  000E6C  A4D8               	btfss	status,2,c
   944  000E6E  EF3B  F007         	goto	u791
   945  000E72  EF3E  F007         	goto	u790
   946  000E76                     u791:
   947  000E76  FFFF               	dw	65535	; assembler added errata NOP
   948  000E78  EF4D  F007         	goto	l1399
   949  000E7C                     u790:
   950  000E7C  FFFF               	dw	65535	; assembler added errata NOP
   951  000E7E                     
   952                           ;parkinggarage.c: 233:         {;parkinggarage.c: 234:             LCD_Clear();
   953  000E7E  EC1C  F009         	call	_LCD_Clear	;wreg free
   954  000E82                     
   955                           ;parkinggarage.c: 235:             LCD_String("PASS");
   956  000E82  0E61               	movlw	low STR_6
   957  000E84  6E15               	movwf	LCD_String@msg^0,c
   958  000E86  0E06               	movlw	high STR_6
   959  000E88  6E16               	movwf	(LCD_String@msg+1)^0,c
   960  000E8A  EC9A  F008         	call	_LCD_String	;wreg free
   961  000E8E                     
   962                           ;parkinggarage.c: 236:             UserB = 1;
   963  000E8E  0E00               	movlw	0
   964  000E90  6E04               	movwf	(_UserB+1)^0,c
   965  000E92  0E01               	movlw	1
   966  000E94  6E03               	movwf	_UserB^0,c
   967  000E96  EF03  F007         	goto	l1381
   968  000E9A                     l1399:
   969  000E9A  FFFF               	dw	65535	; assembler added errata NOP
   970  000E9C  0E32               	movlw	50
   971  000E9E  1812               	xorwf	_User1^0,w,c
   972  000EA0  A4D8               	btfss	status,2,c
   973  000EA2  EF55  F007         	goto	u801
   974  000EA6  EF58  F007         	goto	u800
   975  000EAA                     u801:
   976  000EAA  FFFF               	dw	65535	; assembler added errata NOP
   977  000EAC  EF88  F007         	goto	l1415
   978  000EB0                     u800:
   979  000EB0  FFFF               	dw	65535	; assembler added errata NOP
   980  000EB2  0E33               	movlw	51
   981  000EB4  1811               	xorwf	_User2^0,w,c
   982  000EB6  A4D8               	btfss	status,2,c
   983  000EB8  EF60  F007         	goto	u811
   984  000EBC  EF63  F007         	goto	u810
   985  000EC0                     u811:
   986  000EC0  FFFF               	dw	65535	; assembler added errata NOP
   987  000EC2  EF88  F007         	goto	l1415
   988  000EC6                     u810:
   989  000EC6  FFFF               	dw	65535	; assembler added errata NOP
   990  000EC8  0E32               	movlw	50
   991  000ECA  1810               	xorwf	_User3^0,w,c
   992  000ECC  A4D8               	btfss	status,2,c
   993  000ECE  EF6B  F007         	goto	u821
   994  000ED2  EF6E  F007         	goto	u820
   995  000ED6                     u821:
   996  000ED6  FFFF               	dw	65535	; assembler added errata NOP
   997  000ED8  EF88  F007         	goto	l1415
   998  000EDC                     u820:
   999  000EDC  FFFF               	dw	65535	; assembler added errata NOP
  1000  000EDE  0E23               	movlw	35
  1001  000EE0  180F               	xorwf	_EnterUser^0,w,c
  1002  000EE2  A4D8               	btfss	status,2,c
  1003  000EE4  EF76  F007         	goto	u831
  1004  000EE8  EF79  F007         	goto	u830
  1005  000EEC                     u831:
  1006  000EEC  FFFF               	dw	65535	; assembler added errata NOP
  1007  000EEE  EF88  F007         	goto	l1415
  1008  000EF2                     u830:
  1009  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  1010  000EF4                     
  1011                           ;parkinggarage.c: 240:         {;parkinggarage.c: 241:             LCD_Clear();
  1012  000EF4  EC1C  F009         	call	_LCD_Clear	;wreg free
  1013  000EF8                     
  1014                           ;parkinggarage.c: 242:             LCD_String("PASS");
  1015  000EF8  0E61               	movlw	low STR_6
  1016  000EFA  6E15               	movwf	LCD_String@msg^0,c
  1017  000EFC  0E06               	movlw	high STR_6
  1018  000EFE  6E16               	movwf	(LCD_String@msg+1)^0,c
  1019  000F00  EC9A  F008         	call	_LCD_String	;wreg free
  1020  000F04                     
  1021                           ;parkinggarage.c: 243:             UserC = 1;
  1022  000F04  0E00               	movlw	0
  1023  000F06  6E02               	movwf	(_UserC+1)^0,c
  1024  000F08  0E01               	movlw	1
  1025  000F0A  6E01               	movwf	_UserC^0,c
  1026  000F0C  EF03  F007         	goto	l1381
  1027  000F10                     l1415:
  1028  000F10  FFFF               	dw	65535	; assembler added errata NOP
  1029                           
  1030                           ;parkinggarage.c: 248:             LCD_Clear();
  1031  000F12  EC1C  F009         	call	_LCD_Clear	;wreg free
  1032  000F16                     
  1033                           ;parkinggarage.c: 249:             LCD_String("WRONG");
  1034  000F16  0E5B               	movlw	low STR_9
  1035  000F18  6E15               	movwf	LCD_String@msg^0,c
  1036  000F1A  0E06               	movlw	high STR_9
  1037  000F1C  6E16               	movwf	(LCD_String@msg+1)^0,c
  1038  000F1E  EC9A  F008         	call	_LCD_String	;wreg free
  1039  000F22  EF03  F007         	goto	l1381
  1040  000F26                     l186:
  1041  000F26  FFFF               	dw	65535	; assembler added errata NOP
  1042  000F28  0012               	return		;funcret
  1043  000F2A  FFFF               	dw	65535	; errata NOP
  1044  000F2C                     __end_of_Ask_User:
  1045                           	callstack 0
  1046                           
  1047 ;; *************** function _Ask_Password *****************
  1048 ;; Defined at:
  1049 ;;		line 253 in file "parkinggarage.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1063 ;;      Params:         0       0       0       0       0       0       0
  1064 ;;      Locals:         0       0       0       0       0       0       0
  1065 ;;      Temps:          2       0       0       0       0       0       0
  1066 ;;      Totals:         2       0       0       0       0       0       0
  1067 ;;Total ram usage:        2 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; Hardware stack levels required when called:    2
  1070 ;; This function calls:
  1071 ;;		_GetKey
  1072 ;;		_LCD_Char
  1073 ;;		_LCD_Clear
  1074 ;;		_LCD_GoTo
  1075 ;;		_LCD_String
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text4
  1082  000668                     __ptext4:
  1083                           	callstack 0
  1084  000668                     _Ask_Password:
  1085                           	callstack 0
  1086  000668  FFFF               	dw	65535	; assembler added errata NOP
  1087  00066A                     
  1088                           ;parkinggarage.c: 255:         LCD_Clear();
  1089  00066A  EC1C  F009         	call	_LCD_Clear	;wreg free
  1090  00066E                     
  1091                           ;parkinggarage.c: 256:         LCD_String("Enter Password");
  1092  00066E  0E11               	movlw	low STR_10
  1093  000670  6E15               	movwf	LCD_String@msg^0,c
  1094  000672  0E06               	movlw	high STR_10
  1095  000674  6E16               	movwf	(LCD_String@msg+1)^0,c
  1096  000676  EC9A  F008         	call	_LCD_String	;wreg free
  1097  00067A                     
  1098                           ;parkinggarage.c: 257:         LCD_GoTo(0,1);
  1099  00067A  0E01               	movlw	1
  1100  00067C  6E16               	movwf	LCD_GoTo@line^0,c
  1101  00067E  0E00               	movlw	0
  1102  000680  EC55  F008         	call	_LCD_GoTo
  1103  000684                     
  1104                           ;parkinggarage.c: 258:         Pass1 = GetKey();
  1105  000684  ECD8  F008         	call	_GetKey	;wreg free
  1106  000688  6E0E               	movwf	_Pass1^0,c
  1107  00068A                     
  1108                           ;parkinggarage.c: 259:         LCD_Char(Pass1);
  1109  00068A  500E               	movf	_Pass1^0,w,c
  1110  00068C  EC01  F009         	call	_LCD_Char
  1111  000690                     
  1112                           ;parkinggarage.c: 261:         LCD_GoTo(0,2);
  1113  000690  0E02               	movlw	2
  1114  000692  6E16               	movwf	LCD_GoTo@line^0,c
  1115  000694  0E00               	movlw	0
  1116  000696  EC55  F008         	call	_LCD_GoTo
  1117  00069A                     
  1118                           ;parkinggarage.c: 262:         Pass2 = GetKey();
  1119  00069A  ECD8  F008         	call	_GetKey	;wreg free
  1120  00069E  6E0D               	movwf	_Pass2^0,c
  1121  0006A0                     
  1122                           ;parkinggarage.c: 263:         LCD_Char(Pass2);
  1123  0006A0  500D               	movf	_Pass2^0,w,c
  1124  0006A2  EC01  F009         	call	_LCD_Char
  1125  0006A6                     
  1126                           ;parkinggarage.c: 265:         LCD_GoTo(0,3);
  1127  0006A6  0E03               	movlw	3
  1128  0006A8  6E16               	movwf	LCD_GoTo@line^0,c
  1129  0006AA  0E00               	movlw	0
  1130  0006AC  EC55  F008         	call	_LCD_GoTo
  1131  0006B0                     
  1132                           ;parkinggarage.c: 266:         Pass3 = GetKey();
  1133  0006B0  ECD8  F008         	call	_GetKey	;wreg free
  1134  0006B4  6E0C               	movwf	_Pass3^0,c
  1135  0006B6                     
  1136                           ;parkinggarage.c: 267:         LCD_Char(Pass3);
  1137  0006B6  500C               	movf	_Pass3^0,w,c
  1138  0006B8  EC01  F009         	call	_LCD_Char
  1139  0006BC                     
  1140                           ;parkinggarage.c: 269:         LCD_GoTo(0,4);
  1141  0006BC  0E04               	movlw	4
  1142  0006BE  6E16               	movwf	LCD_GoTo@line^0,c
  1143  0006C0  0E00               	movlw	0
  1144  0006C2  EC55  F008         	call	_LCD_GoTo
  1145  0006C6                     
  1146                           ;parkinggarage.c: 270:         Pass4 = GetKey();
  1147  0006C6  ECD8  F008         	call	_GetKey	;wreg free
  1148  0006CA  6E0B               	movwf	_Pass4^0,c
  1149  0006CC                     
  1150                           ;parkinggarage.c: 271:         LCD_Char(Pass4);
  1151  0006CC  500B               	movf	_Pass4^0,w,c
  1152  0006CE  EC01  F009         	call	_LCD_Char
  1153  0006D2                     
  1154                           ;parkinggarage.c: 273:         LCD_GoTo(0,5);
  1155  0006D2  0E05               	movlw	5
  1156  0006D4  6E16               	movwf	LCD_GoTo@line^0,c
  1157  0006D6  0E00               	movlw	0
  1158  0006D8  EC55  F008         	call	_LCD_GoTo
  1159  0006DC                     
  1160                           ;parkinggarage.c: 274:         Pass5 = GetKey();
  1161  0006DC  ECD8  F008         	call	_GetKey	;wreg free
  1162  0006E0  6E0A               	movwf	_Pass5^0,c
  1163  0006E2                     
  1164                           ;parkinggarage.c: 275:         LCD_Char(Pass5);
  1165  0006E2  500A               	movf	_Pass5^0,w,c
  1166  0006E4  EC01  F009         	call	_LCD_Char
  1167  0006E8                     
  1168                           ;parkinggarage.c: 277:         EnterPassword = GetKey();
  1169  0006E8  ECD8  F008         	call	_GetKey	;wreg free
  1170  0006EC  6E09               	movwf	_EnterPassword^0,c
  1171  0006EE                     
  1172                           ;parkinggarage.c: 279:         if( UserA == 1 && Pass1 == '3' && Pass2 == '3' && Pass3 =
      +                          = '6' && Pass4 == '6' && Pass5 == '5' && EnterPassword == '#')
  1173  0006EE  0405               	decf	_UserA^0,w,c
  1174  0006F0  1006               	iorwf	(_UserA+1)^0,w,c
  1175  0006F2  A4D8               	btfss	status,2,c
  1176  0006F4  EF7E  F003         	goto	u841
  1177  0006F8  EF81  F003         	goto	u840
  1178  0006FC                     u841:
  1179  0006FC  FFFF               	dw	65535	; assembler added errata NOP
  1180  0006FE  EFFF  F003         	goto	l1489
  1181  000702                     u840:
  1182  000702  FFFF               	dw	65535	; assembler added errata NOP
  1183  000704  0E33               	movlw	51
  1184  000706  180E               	xorwf	_Pass1^0,w,c
  1185  000708  A4D8               	btfss	status,2,c
  1186  00070A  EF89  F003         	goto	u851
  1187  00070E  EF8C  F003         	goto	u850
  1188  000712                     u851:
  1189  000712  FFFF               	dw	65535	; assembler added errata NOP
  1190  000714  EFFF  F003         	goto	l1489
  1191  000718                     u850:
  1192  000718  FFFF               	dw	65535	; assembler added errata NOP
  1193  00071A  0E33               	movlw	51
  1194  00071C  180D               	xorwf	_Pass2^0,w,c
  1195  00071E  A4D8               	btfss	status,2,c
  1196  000720  EF94  F003         	goto	u861
  1197  000724  EF97  F003         	goto	u860
  1198  000728                     u861:
  1199  000728  FFFF               	dw	65535	; assembler added errata NOP
  1200  00072A  EFFF  F003         	goto	l1489
  1201  00072E                     u860:
  1202  00072E  FFFF               	dw	65535	; assembler added errata NOP
  1203  000730  0E36               	movlw	54
  1204  000732  180C               	xorwf	_Pass3^0,w,c
  1205  000734  A4D8               	btfss	status,2,c
  1206  000736  EF9F  F003         	goto	u871
  1207  00073A  EFA2  F003         	goto	u870
  1208  00073E                     u871:
  1209  00073E  FFFF               	dw	65535	; assembler added errata NOP
  1210  000740  EFFF  F003         	goto	l1489
  1211  000744                     u870:
  1212  000744  FFFF               	dw	65535	; assembler added errata NOP
  1213  000746  0E36               	movlw	54
  1214  000748  180B               	xorwf	_Pass4^0,w,c
  1215  00074A  A4D8               	btfss	status,2,c
  1216  00074C  EFAA  F003         	goto	u881
  1217  000750  EFAD  F003         	goto	u880
  1218  000754                     u881:
  1219  000754  FFFF               	dw	65535	; assembler added errata NOP
  1220  000756  EFFF  F003         	goto	l1489
  1221  00075A                     u880:
  1222  00075A  FFFF               	dw	65535	; assembler added errata NOP
  1223  00075C  0E35               	movlw	53
  1224  00075E  180A               	xorwf	_Pass5^0,w,c
  1225  000760  A4D8               	btfss	status,2,c
  1226  000762  EFB5  F003         	goto	u891
  1227  000766  EFB8  F003         	goto	u890
  1228  00076A                     u891:
  1229  00076A  FFFF               	dw	65535	; assembler added errata NOP
  1230  00076C  EFFF  F003         	goto	l1489
  1231  000770                     u890:
  1232  000770  FFFF               	dw	65535	; assembler added errata NOP
  1233  000772  0E23               	movlw	35
  1234  000774  1809               	xorwf	_EnterPassword^0,w,c
  1235  000776  A4D8               	btfss	status,2,c
  1236  000778  EFC0  F003         	goto	u901
  1237  00077C  EFC3  F003         	goto	u900
  1238  000780                     u901:
  1239  000780  FFFF               	dw	65535	; assembler added errata NOP
  1240  000782  EFFF  F003         	goto	l1489
  1241  000786                     u900:
  1242  000786  FFFF               	dw	65535	; assembler added errata NOP
  1243  000788                     
  1244                           ;parkinggarage.c: 280:         {;parkinggarage.c: 281:             LCD_Clear();
  1245  000788  EC1C  F009         	call	_LCD_Clear	;wreg free
  1246  00078C                     
  1247                           ;parkinggarage.c: 282:             LCD_String("PASS");
  1248  00078C  0E61               	movlw	low STR_6
  1249  00078E  6E15               	movwf	LCD_String@msg^0,c
  1250  000790  0E06               	movlw	high STR_6
  1251  000792  6E16               	movwf	(LCD_String@msg+1)^0,c
  1252  000794  EC9A  F008         	call	_LCD_String	;wreg free
  1253  000798                     
  1254                           ;parkinggarage.c: 283:             _delay((unsigned long)((2000)*(4000000/4000.0)));
  1255  000798  0E08               	movlw	8
  1256  00079A  6E1D               	movwf	(??_Ask_Password+1)^0,c
  1257  00079C  0E9E               	movlw	158
  1258  00079E  6E1C               	movwf	??_Ask_Password^0,c
  1259  0007A0  0E4C               	movlw	76
  1260  0007A2                     u1187:
  1261  0007A2  FFFF               	dw	65535	; errata NOP
  1262  0007A4  2EE8               	decfsz	wreg,f,c
  1263  0007A6  D7FD               	bra	u1187
  1264  0007A8  2E1C               	decfsz	??_Ask_Password^0,f,c
  1265  0007AA  D7FB               	bra	u1187
  1266  0007AC  2E1D               	decfsz	(??_Ask_Password+1)^0,f,c
  1267  0007AE  D7F9               	bra	u1187
  1268  0007B0                     
  1269                           ;parkinggarage.c: 284:             RA0 = 1;
  1270  0007B0  8080               	bsf	3968,0,c	;volatile
  1271  0007B2                     
  1272                           ;parkinggarage.c: 285:             _delay((unsigned long)((2000)*(4000000/4000.0)));
  1273  0007B2  0E08               	movlw	8
  1274  0007B4  6E1D               	movwf	(??_Ask_Password+1)^0,c
  1275  0007B6  0E9E               	movlw	158
  1276  0007B8  6E1C               	movwf	??_Ask_Password^0,c
  1277  0007BA  0E4C               	movlw	76
  1278  0007BC                     u1197:
  1279  0007BC  FFFF               	dw	65535	; errata NOP
  1280  0007BE  2EE8               	decfsz	wreg,f,c
  1281  0007C0  D7FD               	bra	u1197
  1282  0007C2  2E1C               	decfsz	??_Ask_Password^0,f,c
  1283  0007C4  D7FB               	bra	u1197
  1284  0007C6  2E1D               	decfsz	(??_Ask_Password+1)^0,f,c
  1285  0007C8  D7F9               	bra	u1197
  1286  0007CA                     
  1287                           ;parkinggarage.c: 286:             LCD_Clear();
  1288  0007CA  EC1C  F009         	call	_LCD_Clear	;wreg free
  1289                           
  1290                           ;parkinggarage.c: 287:             LCD_String("Entry Gate Open");
  1291  0007CE  0E01               	movlw	low STR_12
  1292  0007D0  6E15               	movwf	LCD_String@msg^0,c
  1293  0007D2  0E06               	movlw	high STR_12
  1294  0007D4  6E16               	movwf	(LCD_String@msg+1)^0,c
  1295  0007D6  EC9A  F008         	call	_LCD_String	;wreg free
  1296  0007DA                     l1483:
  1297  0007DA  FFFF               	dw	65535	; assembler added errata NOP
  1298                           
  1299                           ;parkinggarage.c: 288:             _delay((unsigned long)((2000)*(4000000/4000.0)));
  1300  0007DC  0E08               	movlw	8
  1301  0007DE  6E1D               	movwf	(??_Ask_Password+1)^0,c
  1302  0007E0  0E9E               	movlw	158
  1303  0007E2  6E1C               	movwf	??_Ask_Password^0,c
  1304  0007E4  0E4C               	movlw	76
  1305  0007E6                     u1207:
  1306  0007E6  FFFF               	dw	65535	; errata NOP
  1307  0007E8  2EE8               	decfsz	wreg,f,c
  1308  0007EA  D7FD               	bra	u1207
  1309  0007EC  2E1C               	decfsz	??_Ask_Password^0,f,c
  1310  0007EE  D7FB               	bra	u1207
  1311  0007F0  2E1D               	decfsz	(??_Ask_Password+1)^0,f,c
  1312  0007F2  D7F9               	bra	u1207
  1313  0007F4                     
  1314                           ;parkinggarage.c: 289:             RA0 = 0;
  1315  0007F4  9080               	bcf	3968,0,c	;volatile
  1316  0007F6                     
  1317                           ;parkinggarage.c: 290:             vehicle++;
  1318  0007F6  4A07               	infsnz	_vehicle^0,f,c
  1319  0007F8  2A08               	incf	(_vehicle+1)^0,f,c
  1320                           
  1321                           ;parkinggarage.c: 291:         }
  1322  0007FA  EF06  F005         	goto	l195
  1323  0007FE                     l1489:
  1324  0007FE  FFFF               	dw	65535	; assembler added errata NOP
  1325  000800  0403               	decf	_UserB^0,w,c
  1326  000802  1004               	iorwf	(_UserB+1)^0,w,c
  1327  000804  A4D8               	btfss	status,2,c
  1328  000806  EF07  F004         	goto	u911
  1329  00080A  EF0A  F004         	goto	u910
  1330  00080E                     u911:
  1331  00080E  FFFF               	dw	65535	; assembler added errata NOP
  1332  000810  EF78  F004         	goto	l1521
  1333  000814                     u910:
  1334  000814  FFFF               	dw	65535	; assembler added errata NOP
  1335  000816  0E38               	movlw	56
  1336  000818  180E               	xorwf	_Pass1^0,w,c
  1337  00081A  A4D8               	btfss	status,2,c
  1338  00081C  EF12  F004         	goto	u921
  1339  000820  EF15  F004         	goto	u920
  1340  000824                     u921:
  1341  000824  FFFF               	dw	65535	; assembler added errata NOP
  1342  000826  EF78  F004         	goto	l1521
  1343  00082A                     u920:
  1344  00082A  FFFF               	dw	65535	; assembler added errata NOP
  1345  00082C  0E33               	movlw	51
  1346  00082E  180D               	xorwf	_Pass2^0,w,c
  1347  000830  A4D8               	btfss	status,2,c
  1348  000832  EF1D  F004         	goto	u931
  1349  000836  EF20  F004         	goto	u930
  1350  00083A                     u931:
  1351  00083A  FFFF               	dw	65535	; assembler added errata NOP
  1352  00083C  EF78  F004         	goto	l1521
  1353  000840                     u930:
  1354  000840  FFFF               	dw	65535	; assembler added errata NOP
  1355  000842  0E36               	movlw	54
  1356  000844  180C               	xorwf	_Pass3^0,w,c
  1357  000846  A4D8               	btfss	status,2,c
  1358  000848  EF28  F004         	goto	u941
  1359  00084C  EF2B  F004         	goto	u940
  1360  000850                     u941:
  1361  000850  FFFF               	dw	65535	; assembler added errata NOP
  1362  000852  EF78  F004         	goto	l1521
  1363  000856                     u940:
  1364  000856  FFFF               	dw	65535	; assembler added errata NOP
  1365  000858  0E38               	movlw	56
  1366  00085A  180B               	xorwf	_Pass4^0,w,c
  1367  00085C  A4D8               	btfss	status,2,c
  1368  00085E  EF33  F004         	goto	u951
  1369  000862  EF36  F004         	goto	u950
  1370  000866                     u951:
  1371  000866  FFFF               	dw	65535	; assembler added errata NOP
  1372  000868  EF78  F004         	goto	l1521
  1373  00086C                     u950:
  1374  00086C  FFFF               	dw	65535	; assembler added errata NOP
  1375  00086E  0E30               	movlw	48
  1376  000870  180A               	xorwf	_Pass5^0,w,c
  1377  000872  A4D8               	btfss	status,2,c
  1378  000874  EF3E  F004         	goto	u961
  1379  000878  EF41  F004         	goto	u960
  1380  00087C                     u961:
  1381  00087C  FFFF               	dw	65535	; assembler added errata NOP
  1382  00087E  EF78  F004         	goto	l1521
  1383  000882                     u960:
  1384  000882  FFFF               	dw	65535	; assembler added errata NOP
  1385  000884  0E23               	movlw	35
  1386  000886  1809               	xorwf	_EnterPassword^0,w,c
  1387  000888  A4D8               	btfss	status,2,c
  1388  00088A  EF49  F004         	goto	u971
  1389  00088E  EF4C  F004         	goto	u970
  1390  000892                     u971:
  1391  000892  FFFF               	dw	65535	; assembler added errata NOP
  1392  000894  EF78  F004         	goto	l1521
  1393  000898                     u970:
  1394  000898  FFFF               	dw	65535	; assembler added errata NOP
  1395  00089A                     
  1396                           ;parkinggarage.c: 293:         {;parkinggarage.c: 294:             LCD_Clear();
  1397  00089A  EC1C  F009         	call	_LCD_Clear	;wreg free
  1398  00089E                     
  1399                           ;parkinggarage.c: 295:             LCD_String("PASS");
  1400  00089E  0E61               	movlw	low STR_6
  1401  0008A0  6E15               	movwf	LCD_String@msg^0,c
  1402  0008A2  0E06               	movlw	high STR_6
  1403  0008A4  6E16               	movwf	(LCD_String@msg+1)^0,c
  1404  0008A6  EC9A  F008         	call	_LCD_String	;wreg free
  1405  0008AA                     
  1406                           ;parkinggarage.c: 296:             _delay((unsigned long)((2000)*(4000000/4000.0)));
  1407  0008AA  0E08               	movlw	8
  1408  0008AC  6E1D               	movwf	(??_Ask_Password+1)^0,c
  1409  0008AE  0E9E               	movlw	158
  1410  0008B0  6E1C               	movwf	??_Ask_Password^0,c
  1411  0008B2  0E4C               	movlw	76
  1412  0008B4                     u1217:
  1413  0008B4  FFFF               	dw	65535	; errata NOP
  1414  0008B6  2EE8               	decfsz	wreg,f,c
  1415  0008B8  D7FD               	bra	u1217
  1416  0008BA  2E1C               	decfsz	??_Ask_Password^0,f,c
  1417  0008BC  D7FB               	bra	u1217
  1418  0008BE  2E1D               	decfsz	(??_Ask_Password+1)^0,f,c
  1419  0008C0  D7F9               	bra	u1217
  1420  0008C2                     
  1421                           ;parkinggarage.c: 297:             RA0 = 1;
  1422  0008C2  8080               	bsf	3968,0,c	;volatile
  1423  0008C4                     
  1424                           ;parkinggarage.c: 298:             _delay((unsigned long)((2000)*(4000000/4000.0)));
  1425  0008C4  0E08               	movlw	8
  1426  0008C6  6E1D               	movwf	(??_Ask_Password+1)^0,c
  1427  0008C8  0E9E               	movlw	158
  1428  0008CA  6E1C               	movwf	??_Ask_Password^0,c
  1429  0008CC  0E4C               	movlw	76
  1430  0008CE                     u1227:
  1431  0008CE  FFFF               	dw	65535	; errata NOP
  1432  0008D0  2EE8               	decfsz	wreg,f,c
  1433  0008D2  D7FD               	bra	u1227
  1434  0008D4  2E1C               	decfsz	??_Ask_Password^0,f,c
  1435  0008D6  D7FB               	bra	u1227
  1436  0008D8  2E1D               	decfsz	(??_Ask_Password+1)^0,f,c
  1437  0008DA  D7F9               	bra	u1227
  1438  0008DC                     
  1439                           ;parkinggarage.c: 299:             LCD_Clear();
  1440  0008DC  EC1C  F009         	call	_LCD_Clear	;wreg free
  1441                           
  1442                           ;parkinggarage.c: 300:             LCD_String("Entry Gate Open");
  1443  0008E0  0E01               	movlw	low STR_12
  1444  0008E2  6E15               	movwf	LCD_String@msg^0,c
  1445  0008E4  0E06               	movlw	high STR_12
  1446  0008E6  6E16               	movwf	(LCD_String@msg+1)^0,c
  1447  0008E8  EC9A  F008         	call	_LCD_String	;wreg free
  1448  0008EC  EFED  F003         	goto	l1483
  1449  0008F0                     l1521:
  1450  0008F0  FFFF               	dw	65535	; assembler added errata NOP
  1451  0008F2  0401               	decf	_UserC^0,w,c
  1452  0008F4  1002               	iorwf	(_UserC+1)^0,w,c
  1453  0008F6  A4D8               	btfss	status,2,c
  1454  0008F8  EF80  F004         	goto	u981
  1455  0008FC  EF83  F004         	goto	u980
  1456  000900                     u981:
  1457  000900  FFFF               	dw	65535	; assembler added errata NOP
  1458  000902  EFF1  F004         	goto	l1553
  1459  000906                     u980:
  1460  000906  FFFF               	dw	65535	; assembler added errata NOP
  1461  000908  0E32               	movlw	50
  1462  00090A  180E               	xorwf	_Pass1^0,w,c
  1463  00090C  A4D8               	btfss	status,2,c
  1464  00090E  EF8B  F004         	goto	u991
  1465  000912  EF8E  F004         	goto	u990
  1466  000916                     u991:
  1467  000916  FFFF               	dw	65535	; assembler added errata NOP
  1468  000918  EFF1  F004         	goto	l1553
  1469  00091C                     u990:
  1470  00091C  FFFF               	dw	65535	; assembler added errata NOP
  1471  00091E  0E32               	movlw	50
  1472  000920  180D               	xorwf	_Pass2^0,w,c
  1473  000922  A4D8               	btfss	status,2,c
  1474  000924  EF96  F004         	goto	u1001
  1475  000928  EF99  F004         	goto	u1000
  1476  00092C                     u1001:
  1477  00092C  FFFF               	dw	65535	; assembler added errata NOP
  1478  00092E  EFF1  F004         	goto	l1553
  1479  000932                     u1000:
  1480  000932  FFFF               	dw	65535	; assembler added errata NOP
  1481  000934  0E38               	movlw	56
  1482  000936  180C               	xorwf	_Pass3^0,w,c
  1483  000938  A4D8               	btfss	status,2,c
  1484  00093A  EFA1  F004         	goto	u1011
  1485  00093E  EFA4  F004         	goto	u1010
  1486  000942                     u1011:
  1487  000942  FFFF               	dw	65535	; assembler added errata NOP
  1488  000944  EFF1  F004         	goto	l1553
  1489  000948                     u1010:
  1490  000948  FFFF               	dw	65535	; assembler added errata NOP
  1491  00094A  0E38               	movlw	56
  1492  00094C  180B               	xorwf	_Pass4^0,w,c
  1493  00094E  A4D8               	btfss	status,2,c
  1494  000950  EFAC  F004         	goto	u1021
  1495  000954  EFAF  F004         	goto	u1020
  1496  000958                     u1021:
  1497  000958  FFFF               	dw	65535	; assembler added errata NOP
  1498  00095A  EFF1  F004         	goto	l1553
  1499  00095E                     u1020:
  1500  00095E  FFFF               	dw	65535	; assembler added errata NOP
  1501  000960  0E39               	movlw	57
  1502  000962  180A               	xorwf	_Pass5^0,w,c
  1503  000964  A4D8               	btfss	status,2,c
  1504  000966  EFB7  F004         	goto	u1031
  1505  00096A  EFBA  F004         	goto	u1030
  1506  00096E                     u1031:
  1507  00096E  FFFF               	dw	65535	; assembler added errata NOP
  1508  000970  EFF1  F004         	goto	l1553
  1509  000974                     u1030:
  1510  000974  FFFF               	dw	65535	; assembler added errata NOP
  1511  000976  0E23               	movlw	35
  1512  000978  1809               	xorwf	_EnterPassword^0,w,c
  1513  00097A  A4D8               	btfss	status,2,c
  1514  00097C  EFC2  F004         	goto	u1041
  1515  000980  EFC5  F004         	goto	u1040
  1516  000984                     u1041:
  1517  000984  FFFF               	dw	65535	; assembler added errata NOP
  1518  000986  EFF1  F004         	goto	l1553
  1519  00098A                     u1040:
  1520  00098A  FFFF               	dw	65535	; assembler added errata NOP
  1521  00098C                     
  1522                           ;parkinggarage.c: 306:         {;parkinggarage.c: 307:             LCD_Clear();
  1523  00098C  EC1C  F009         	call	_LCD_Clear	;wreg free
  1524  000990                     
  1525                           ;parkinggarage.c: 308:             LCD_String("PASS");
  1526  000990  0E61               	movlw	low STR_6
  1527  000992  6E15               	movwf	LCD_String@msg^0,c
  1528  000994  0E06               	movlw	high STR_6
  1529  000996  6E16               	movwf	(LCD_String@msg+1)^0,c
  1530  000998  EC9A  F008         	call	_LCD_String	;wreg free
  1531  00099C                     
  1532                           ;parkinggarage.c: 309:             _delay((unsigned long)((2000)*(4000000/4000.0)));
  1533  00099C  0E08               	movlw	8
  1534  00099E  6E1D               	movwf	(??_Ask_Password+1)^0,c
  1535  0009A0  0E9E               	movlw	158
  1536  0009A2  6E1C               	movwf	??_Ask_Password^0,c
  1537  0009A4  0E4C               	movlw	76
  1538  0009A6                     u1237:
  1539  0009A6  FFFF               	dw	65535	; errata NOP
  1540  0009A8  2EE8               	decfsz	wreg,f,c
  1541  0009AA  D7FD               	bra	u1237
  1542  0009AC  2E1C               	decfsz	??_Ask_Password^0,f,c
  1543  0009AE  D7FB               	bra	u1237
  1544  0009B0  2E1D               	decfsz	(??_Ask_Password+1)^0,f,c
  1545  0009B2  D7F9               	bra	u1237
  1546  0009B4                     
  1547                           ;parkinggarage.c: 310:             RA0 = 1;
  1548  0009B4  8080               	bsf	3968,0,c	;volatile
  1549  0009B6                     
  1550                           ;parkinggarage.c: 311:             _delay((unsigned long)((2000)*(4000000/4000.0)));
  1551  0009B6  0E08               	movlw	8
  1552  0009B8  6E1D               	movwf	(??_Ask_Password+1)^0,c
  1553  0009BA  0E9E               	movlw	158
  1554  0009BC  6E1C               	movwf	??_Ask_Password^0,c
  1555  0009BE  0E4C               	movlw	76
  1556  0009C0                     u1247:
  1557  0009C0  FFFF               	dw	65535	; errata NOP
  1558  0009C2  2EE8               	decfsz	wreg,f,c
  1559  0009C4  D7FD               	bra	u1247
  1560  0009C6  2E1C               	decfsz	??_Ask_Password^0,f,c
  1561  0009C8  D7FB               	bra	u1247
  1562  0009CA  2E1D               	decfsz	(??_Ask_Password+1)^0,f,c
  1563  0009CC  D7F9               	bra	u1247
  1564  0009CE                     
  1565                           ;parkinggarage.c: 312:             LCD_Clear();
  1566  0009CE  EC1C  F009         	call	_LCD_Clear	;wreg free
  1567                           
  1568                           ;parkinggarage.c: 313:             LCD_String("Entry Gate Open");
  1569  0009D2  0E01               	movlw	low STR_12
  1570  0009D4  6E15               	movwf	LCD_String@msg^0,c
  1571  0009D6  0E06               	movlw	high STR_12
  1572  0009D8  6E16               	movwf	(LCD_String@msg+1)^0,c
  1573  0009DA  EC9A  F008         	call	_LCD_String	;wreg free
  1574  0009DE  EFED  F003         	goto	l1483
  1575  0009E2                     l1553:
  1576  0009E2  FFFF               	dw	65535	; assembler added errata NOP
  1577                           
  1578                           ;parkinggarage.c: 319:         {;parkinggarage.c: 320:             LCD_Clear();
  1579  0009E4  EC1C  F009         	call	_LCD_Clear	;wreg free
  1580  0009E8                     
  1581                           ;parkinggarage.c: 321:             LCD_String("WRONG");
  1582  0009E8  0E5B               	movlw	low STR_9
  1583  0009EA  6E15               	movwf	LCD_String@msg^0,c
  1584  0009EC  0E06               	movlw	high STR_9
  1585  0009EE  6E16               	movwf	(LCD_String@msg+1)^0,c
  1586  0009F0  EC9A  F008         	call	_LCD_String	;wreg free
  1587  0009F4                     
  1588                           ;parkinggarage.c: 322:             _delay((unsigned long)((2000)*(4000000/4000.0)));
  1589  0009F4  0E08               	movlw	8
  1590  0009F6  6E1D               	movwf	(??_Ask_Password+1)^0,c
  1591  0009F8  0E9E               	movlw	158
  1592  0009FA  6E1C               	movwf	??_Ask_Password^0,c
  1593  0009FC  0E4C               	movlw	76
  1594  0009FE                     u1257:
  1595  0009FE  FFFF               	dw	65535	; errata NOP
  1596  000A00  2EE8               	decfsz	wreg,f,c
  1597  000A02  D7FD               	bra	u1257
  1598  000A04  2E1C               	decfsz	??_Ask_Password^0,f,c
  1599  000A06  D7FB               	bra	u1257
  1600  000A08  2E1D               	decfsz	(??_Ask_Password+1)^0,f,c
  1601  000A0A  D7F9               	bra	u1257
  1602  000A0C                     l195:
  1603  000A0C  FFFF               	dw	65535	; assembler added errata NOP
  1604  000A0E  0012               	return		;funcret
  1605  000A10  FFFF               	dw	65535	; errata NOP
  1606  000A12                     __end_of_Ask_Password:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function _LCD_String *****************
  1610 ;; Defined at:
  1611 ;;		line 184 in file "parkinggarage.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  msg             2    1[COMRAM] PTR const unsigned char 
  1614 ;;		 -> STR_17(6), STR_16(16), STR_15(5), STR_14(16), 
  1615 ;;		 -> STR_13(5), STR_12(16), STR_11(5), STR_10(15), 
  1616 ;;		 -> STR_9(6), STR_8(5), STR_7(5), STR_6(5), 
  1617 ;;		 -> STR_5(11), STR_4(10), STR_3(15), STR_2(9), 
  1618 ;;		 -> STR_1(14), 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;		None
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1630 ;;      Params:         2       0       0       0       0       0       0
  1631 ;;      Locals:         0       0       0       0       0       0       0
  1632 ;;      Temps:          0       0       0       0       0       0       0
  1633 ;;      Totals:         2       0       0       0       0       0       0
  1634 ;;Total ram usage:        2 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; Hardware stack levels required when called:    1
  1637 ;; This function calls:
  1638 ;;		_LCD_Char
  1639 ;; This function is called by:
  1640 ;;		_main
  1641 ;;		_Ask_User
  1642 ;;		_Ask_Password
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text5
  1647  001134                     __ptext5:
  1648                           	callstack 0
  1649  001134                     _LCD_String:
  1650                           	callstack 0
  1651  001134  FFFF               	dw	65535	; assembler added errata NOP
  1652  001136                     
  1653                           ;parkinggarage.c: 184: void LCD_String(const char *msg);parkinggarage.c: 185:     {;park
      +                          inggarage.c: 186:         while((*msg)!=0)
  1654  001136  EFA9  F008         	goto	l1311
  1655  00113A                     l1307:
  1656  00113A  FFFF               	dw	65535	; assembler added errata NOP
  1657                           
  1658                           ;parkinggarage.c: 187:         {;parkinggarage.c: 188:         LCD_Char(*msg);
  1659  00113C  C015  FFF6         	movff	LCD_String@msg,tblptrl
  1660  001140  C016  FFF7         	movff	LCD_String@msg+1,tblptrh
  1661  001144                     	if	0	;tblptru may be non-zero
  1662  001144                     	endif
  1663  001144                     	if	0	;tblptru may be non-zero
  1664  001144                     	endif
  1665  001144  0008               	tblrd		*
  1666  001146  FFFF               	dw	65535	; errata NOP
  1667  001148  50F5               	movf	tablat,w,c
  1668  00114A  EC01  F009         	call	_LCD_Char
  1669  00114E                     
  1670                           ;parkinggarage.c: 189:         msg++;
  1671  00114E  4A15               	infsnz	LCD_String@msg^0,f,c
  1672  001150  2A16               	incf	(LCD_String@msg+1)^0,f,c
  1673  001152                     l1311:
  1674  001152  FFFF               	dw	65535	; assembler added errata NOP
  1675                           
  1676                           ;parkinggarage.c: 186:         while((*msg)!=0)
  1677  001154  C015  FFF6         	movff	LCD_String@msg,tblptrl
  1678  001158  C016  FFF7         	movff	LCD_String@msg+1,tblptrh
  1679  00115C                     	if	0	;tblptru may be non-zero
  1680  00115C                     	endif
  1681  00115C                     	if	0	;tblptru may be non-zero
  1682  00115C                     	endif
  1683  00115C  0008               	tblrd		*
  1684  00115E  FFFF               	dw	65535	; errata NOP
  1685  001160  50F5               	movf	tablat,w,c
  1686  001162  0900               	iorlw	0
  1687  001164  A4D8               	btfss	status,2,c
  1688  001166  EFB7  F008         	goto	u681
  1689  00116A  EFBA  F008         	goto	u680
  1690  00116E                     u681:
  1691  00116E  FFFF               	dw	65535	; assembler added errata NOP
  1692  001170  EF9D  F008         	goto	l1307
  1693  001174                     u680:
  1694  001174  FFFF               	dw	65535	; assembler added errata NOP
  1695  001176  0012               	return		;funcret
  1696  001178  FFFF               	dw	65535	; errata NOP
  1697  00117A                     __end_of_LCD_String:
  1698                           	callstack 0
  1699                           
  1700 ;; *************** function _LCD_Char *****************
  1701 ;; Defined at:
  1702 ;;		line 176 in file "parkinggarage.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  dat             1    wreg     unsigned char 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  dat             1    0[COMRAM] unsigned char 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1716 ;;      Params:         0       0       0       0       0       0       0
  1717 ;;      Locals:         1       0       0       0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0       0       0
  1719 ;;      Totals:         1       0       0       0       0       0       0
  1720 ;;Total ram usage:        1 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_LCD_String
  1726 ;;		_Ask_User
  1727 ;;		_Ask_Password
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text6
  1732  001202                     __ptext6:
  1733                           	callstack 0
  1734  001202                     _LCD_Char:
  1735                           	callstack 0
  1736  001202  FFFF               	dw	65535	; assembler added errata NOP
  1737                           
  1738                           ;incstack = 0
  1739                           ;LCD_Char@dat stored from wreg
  1740  001204  6E14               	movwf	LCD_Char@dat^0,c
  1741  001206                     
  1742                           ;parkinggarage.c: 176: void LCD_Char(char dat);parkinggarage.c: 177:     {;parkinggarage
      +                          .c: 178:         LATB = dat;
  1743  001206  C014  FF8A         	movff	LCD_Char@dat,3978	;volatile
  1744  00120A                     
  1745                           ;parkinggarage.c: 179:         LATD0 = 1;
  1746  00120A  808C               	bsf	3980,0,c	;volatile
  1747  00120C                     
  1748                           ;parkinggarage.c: 180:         LATD1=1;
  1749  00120C  828C               	bsf	3980,1,c	;volatile
  1750  00120E                     
  1751                           ;parkinggarage.c: 181:         LATD1 = 0;
  1752  00120E  928C               	bcf	3980,1,c	;volatile
  1753  001210                     
  1754                           ;parkinggarage.c: 182:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1755  001210  0EC8               	movlw	200
  1756  001212                     u1267:
  1757  001212  FFFF               	dw	65535	; errata NOP
  1758  001214  F000               	nop	
  1759  001216  2EE8               	decfsz	wreg,f,c
  1760  001218  D7FC               	bra	u1267
  1761  00121A  0012               	return		;funcret
  1762  00121C  FFFF               	dw	65535	; errata NOP
  1763  00121E                     __end_of_LCD_Char:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _LCD_GoTo *****************
  1767 ;; Defined at:
  1768 ;;		line 192 in file "parkinggarage.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  column          1    wreg     unsigned char 
  1771 ;;  line            1    2[COMRAM] unsigned char 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  column          1    7[COMRAM] unsigned char 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg, status,2, status,0, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1783 ;;      Params:         1       0       0       0       0       0       0
  1784 ;;      Locals:         3       0       0       0       0       0       0
  1785 ;;      Temps:          2       0       0       0       0       0       0
  1786 ;;      Totals:         6       0       0       0       0       0       0
  1787 ;;Total ram usage:        6 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    1
  1790 ;; This function calls:
  1791 ;;		_LCD_Command
  1792 ;; This function is called by:
  1793 ;;		_Ask_User
  1794 ;;		_Ask_Password
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text7
  1799  0010AA                     __ptext7:
  1800                           	callstack 0
  1801  0010AA                     _LCD_GoTo:
  1802                           	callstack 0
  1803  0010AA  FFFF               	dw	65535	; assembler added errata NOP
  1804                           
  1805                           ;incstack = 0
  1806                           ;LCD_GoTo@column stored from wreg
  1807  0010AC  6E1B               	movwf	LCD_GoTo@column^0,c
  1808  0010AE                     
  1809                           ;parkinggarage.c: 192: void LCD_GoTo(char column,char line);parkinggarage.c: 193: {;park
      +                          inggarage.c: 195:     if ((line > (2 -1)) || (column > (16 -1)))
  1810  0010AE  0E02               	movlw	2
  1811  0010B0  6016               	cpfslt	LCD_GoTo@line^0,c
  1812  0010B2  EF5D  F008         	goto	u691
  1813  0010B6  EF60  F008         	goto	u690
  1814  0010BA                     u691:
  1815  0010BA  FFFF               	dw	65535	; assembler added errata NOP
  1816  0010BC  EF97  F008         	goto	l173
  1817  0010C0                     u690:
  1818  0010C0  FFFF               	dw	65535	; assembler added errata NOP
  1819  0010C2  0E0F               	movlw	15
  1820  0010C4  641B               	cpfsgt	LCD_GoTo@column^0,c
  1821  0010C6  EF67  F008         	goto	u701
  1822  0010CA  EF6A  F008         	goto	u700
  1823  0010CE                     u701:
  1824  0010CE  FFFF               	dw	65535	; assembler added errata NOP
  1825  0010D0  EF6D  F008         	goto	l1319
  1826  0010D4                     u700:
  1827  0010D4  FFFF               	dw	65535	; assembler added errata NOP
  1828  0010D6  EF97  F008         	goto	l173
  1829  0010DA                     l1319:
  1830  0010DA  FFFF               	dw	65535	; assembler added errata NOP
  1831                           
  1832                           ;parkinggarage.c: 201:     LCD_Command((line == 1) ? (0xC0 | column) : (0x80 | column));
  1833  0010DC  0416               	decf	LCD_GoTo@line^0,w,c
  1834  0010DE  B4D8               	btfsc	status,2,c
  1835  0010E0  EF74  F008         	goto	u711
  1836  0010E4  EF77  F008         	goto	u710
  1837  0010E8                     u711:
  1838  0010E8  FFFF               	dw	65535	; assembler added errata NOP
  1839  0010EA  EF82  F008         	goto	l1323
  1840  0010EE                     u710:
  1841  0010EE  FFFF               	dw	65535	; assembler added errata NOP
  1842  0010F0  0E80               	movlw	128
  1843  0010F2  C01B  F017         	movff	LCD_GoTo@column,??_LCD_GoTo
  1844  0010F6  6A18               	clrf	(??_LCD_GoTo+1)^0,c
  1845  0010F8  1017               	iorwf	??_LCD_GoTo^0,w,c
  1846  0010FA  6E19               	movwf	_LCD_GoTo$247^0,c
  1847  0010FC  5018               	movf	(??_LCD_GoTo+1)^0,w,c
  1848  0010FE  6E1A               	movwf	(_LCD_GoTo$247+1)^0,c
  1849  001100  EF8B  F008         	goto	l1325
  1850  001104                     l1323:
  1851  001104  FFFF               	dw	65535	; assembler added errata NOP
  1852  001106  0EC0               	movlw	192
  1853  001108  C01B  F017         	movff	LCD_GoTo@column,??_LCD_GoTo
  1854  00110C  6A18               	clrf	(??_LCD_GoTo+1)^0,c
  1855  00110E  1017               	iorwf	??_LCD_GoTo^0,w,c
  1856  001110  6E19               	movwf	_LCD_GoTo$247^0,c
  1857  001112  5018               	movf	(??_LCD_GoTo+1)^0,w,c
  1858  001114  6E1A               	movwf	(_LCD_GoTo$247+1)^0,c
  1859  001116                     l1325:
  1860  001116  FFFF               	dw	65535	; assembler added errata NOP
  1861  001118  5019               	movf	_LCD_GoTo$247^0,w,c
  1862  00111A  ECF0  F008         	call	_LCD_Command
  1863  00111E                     
  1864                           ;parkinggarage.c: 204:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1865  00111E  0E05               	movlw	5
  1866  001120  6E17               	movwf	??_LCD_GoTo^0,c
  1867  001122  0EDF               	movlw	223
  1868  001124                     u1277:
  1869  001124  FFFF               	dw	65535	; errata NOP
  1870  001126  2EE8               	decfsz	wreg,f,c
  1871  001128  D7FD               	bra	u1277
  1872  00112A  2E17               	decfsz	??_LCD_GoTo^0,f,c
  1873  00112C  D7FB               	bra	u1277
  1874  00112E                     l173:
  1875  00112E  FFFF               	dw	65535	; assembler added errata NOP
  1876  001130  0012               	return		;funcret
  1877  001132  FFFF               	dw	65535	; errata NOP
  1878  001134                     __end_of_LCD_GoTo:
  1879                           	callstack 0
  1880                           
  1881 ;; *************** function _LCD_Clear *****************
  1882 ;; Defined at:
  1883 ;;		line 171 in file "parkinggarage.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;		None
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;		None
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      void 
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1897 ;;      Params:         0       0       0       0       0       0       0
  1898 ;;      Locals:         0       0       0       0       0       0       0
  1899 ;;      Temps:          0       0       0       0       0       0       0
  1900 ;;      Totals:         0       0       0       0       0       0       0
  1901 ;;Total ram usage:        0 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    1
  1904 ;; This function calls:
  1905 ;;		_LCD_Command
  1906 ;; This function is called by:
  1907 ;;		_main
  1908 ;;		_Ask_User
  1909 ;;		_Ask_Password
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text8
  1914  001238                     __ptext8:
  1915                           	callstack 0
  1916  001238                     _LCD_Clear:
  1917                           	callstack 0
  1918  001238  FFFF               	dw	65535	; assembler added errata NOP
  1919  00123A                     
  1920                           ;parkinggarage.c: 173:         LCD_Command(0x01);
  1921  00123A  0E01               	movlw	1
  1922  00123C  ECF0  F008         	call	_LCD_Command
  1923                           
  1924                           ;parkinggarage.c: 174:         LCD_Command(0x80);
  1925  001240  0E80               	movlw	128
  1926  001242  ECF0  F008         	call	_LCD_Command
  1927  001246  0012               	return		;funcret
  1928  001248  FFFF               	dw	65535	; errata NOP
  1929  00124A                     __end_of_LCD_Clear:
  1930                           	callstack 0
  1931                           
  1932 ;; *************** function _LCD_Command *****************
  1933 ;; Defined at:
  1934 ;;		line 161 in file "parkinggarage.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  cmd             1    wreg     unsigned char 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  cmd             1    1[COMRAM] unsigned char 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, status,2, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1948 ;;      Params:         0       0       0       0       0       0       0
  1949 ;;      Locals:         1       0       0       0       0       0       0
  1950 ;;      Temps:          1       0       0       0       0       0       0
  1951 ;;      Totals:         2       0       0       0       0       0       0
  1952 ;;Total ram usage:        2 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; This function calls:
  1955 ;;		Nothing
  1956 ;; This function is called by:
  1957 ;;		_LCD_Init
  1958 ;;		_LCD_Clear
  1959 ;;		_LCD_GoTo
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text9
  1964  0011E0                     __ptext9:
  1965                           	callstack 0
  1966  0011E0                     _LCD_Command:
  1967                           	callstack 0
  1968  0011E0  FFFF               	dw	65535	; assembler added errata NOP
  1969                           
  1970                           ;incstack = 0
  1971                           ;LCD_Command@cmd stored from wreg
  1972  0011E2  6E15               	movwf	LCD_Command@cmd^0,c
  1973  0011E4                     
  1974                           ;parkinggarage.c: 161: void LCD_Command(char cmd );parkinggarage.c: 162:     {;parkingga
      +                          rage.c: 163:         LATB = cmd;
  1975  0011E4  C015  FF8A         	movff	LCD_Command@cmd,3978	;volatile
  1976  0011E8                     
  1977                           ;parkinggarage.c: 165:         LATD0 = 0;
  1978  0011E8  908C               	bcf	3980,0,c	;volatile
  1979  0011EA                     
  1980                           ;parkinggarage.c: 166:         LATD1 = 1;
  1981  0011EA  828C               	bsf	3980,1,c	;volatile
  1982  0011EC                     
  1983                           ;parkinggarage.c: 168:         LATD1 = 0;
  1984  0011EC  928C               	bcf	3980,1,c	;volatile
  1985  0011EE                     
  1986                           ;parkinggarage.c: 169:         _delay((unsigned long)((3)*(4000000/4000.0)));
  1987  0011EE  0E03               	movlw	3
  1988  0011F0  6E14               	movwf	??_LCD_Command^0,c
  1989  0011F2  0EEC               	movlw	236
  1990  0011F4                     u1287:
  1991  0011F4  FFFF               	dw	65535	; errata NOP
  1992  0011F6  2EE8               	decfsz	wreg,f,c
  1993  0011F8  D7FD               	bra	u1287
  1994  0011FA  2E14               	decfsz	??_LCD_Command^0,f,c
  1995  0011FC  D7FB               	bra	u1287
  1996  0011FE  0012               	return		;funcret
  1997  001200  FFFF               	dw	65535	; errata NOP
  1998  001202                     __end_of_LCD_Command:
  1999                           	callstack 0
  2000                           
  2001 ;; *************** function _GetKey *****************
  2002 ;; Defined at:
  2003 ;;		line 108 in file "parkinggarage.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;		None
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  key             1    1[COMRAM] unsigned char 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      unsigned char 
  2010 ;; Registers used:
  2011 ;;		wreg, status,2, status,0, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2017 ;;      Params:         0       0       0       0       0       0       0
  2018 ;;      Locals:         1       0       0       0       0       0       0
  2019 ;;      Temps:          0       0       0       0       0       0       0
  2020 ;;      Totals:         1       0       0       0       0       0       0
  2021 ;;Total ram usage:        1 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    1
  2024 ;; This function calls:
  2025 ;;		_keypad_scanner
  2026 ;; This function is called by:
  2027 ;;		_Ask_User
  2028 ;;		_Ask_Password
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text10
  2033  0011B0                     __ptext10:
  2034                           	callstack 0
  2035  0011B0                     _GetKey:
  2036                           	callstack 0
  2037  0011B0  FFFF               	dw	65535	; assembler added errata NOP
  2038  0011B2                     
  2039                           ;parkinggarage.c: 110:     char key = 'n';
  2040  0011B2  0E6E               	movlw	110
  2041  0011B4  6E15               	movwf	GetKey@key^0,c
  2042                           
  2043                           ;parkinggarage.c: 111:     while(key == 'n')
  2044  0011B6  EFE1  F008         	goto	l983
  2045  0011BA                     l981:
  2046  0011BA  FFFF               	dw	65535	; assembler added errata NOP
  2047                           
  2048                           ;parkinggarage.c: 112:     key = keypad_scanner();
  2049  0011BC  EC09  F005         	call	_keypad_scanner	;wreg free
  2050  0011C0  6E15               	movwf	GetKey@key^0,c
  2051  0011C2                     l983:
  2052  0011C2  FFFF               	dw	65535	; assembler added errata NOP
  2053                           
  2054                           ;parkinggarage.c: 111:     while(key == 'n')
  2055  0011C4  0E6E               	movlw	110
  2056  0011C6  1815               	xorwf	GetKey@key^0,w,c
  2057  0011C8  B4D8               	btfsc	status,2,c
  2058  0011CA  EFE9  F008         	goto	u261
  2059  0011CE  EFEC  F008         	goto	u260
  2060  0011D2                     u261:
  2061  0011D2  FFFF               	dw	65535	; assembler added errata NOP
  2062  0011D4  EFDD  F008         	goto	l981
  2063  0011D8                     u260:
  2064  0011D8  FFFF               	dw	65535	; assembler added errata NOP
  2065  0011DA                     
  2066                           ;parkinggarage.c: 113:     return key;
  2067  0011DA  5015               	movf	GetKey@key^0,w,c
  2068  0011DC  0012               	return		;funcret
  2069  0011DE  FFFF               	dw	65535	; errata NOP
  2070  0011E0                     __end_of_GetKey:
  2071                           	callstack 0
  2072                           
  2073 ;; *************** function _keypad_scanner *****************
  2074 ;; Defined at:
  2075 ;;		line 116 in file "parkinggarage.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      unsigned char 
  2082 ;; Registers used:
  2083 ;;		wreg
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2089 ;;      Params:         0       0       0       0       0       0       0
  2090 ;;      Locals:         0       0       0       0       0       0       0
  2091 ;;      Temps:          1       0       0       0       0       0       0
  2092 ;;      Totals:         1       0       0       0       0       0       0
  2093 ;;Total ram usage:        1 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_GetKey
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text11
  2103  000A12                     __ptext11:
  2104                           	callstack 0
  2105  000A12                     _keypad_scanner:
  2106                           	callstack 0
  2107  000A12  FFFF               	dw	65535	; assembler added errata NOP
  2108  000A14                     
  2109                           ;parkinggarage.c: 119:             PORTCbits.RC0 = 0; PORTCbits.RC1 = 1; PORTCbits.RC2 =
      +                           1; PORTCbits.RC3 = 1;
  2110  000A14  9082               	bcf	130,0,c	;volatile
  2111  000A16  8282               	bsf	130,1,c	;volatile
  2112  000A18  8482               	bsf	130,2,c	;volatile
  2113  000A1A  8682               	bsf	130,3,c	;volatile
  2114                           
  2115                           ;parkinggarage.c: 120:             if (PORTCbits.RC4 == 0) { _delay((unsigned long)((100
      +                          )*(4000000/4000.0))); while (PORTCbits.RC4==0); return '*'; }
  2116  000A1C  B882               	btfsc	130,4,c	;volatile
  2117  000A1E  EF13  F005         	goto	u11
  2118  000A22  EF16  F005         	goto	u10
  2119  000A26                     u11:
  2120  000A26  FFFF               	dw	65535	; assembler added errata NOP
  2121  000A28  EF2D  F005         	goto	l98
  2122  000A2C                     u10:
  2123  000A2C  FFFF               	dw	65535	; assembler added errata NOP
  2124  000A2E  0E62               	movlw	98
  2125  000A30  6E14               	movwf	??_keypad_scanner^0,c
  2126  000A32  0E76               	movlw	118
  2127  000A34                     u1297:
  2128  000A34  FFFF               	dw	65535	; errata NOP
  2129  000A36  2EE8               	decfsz	wreg,f,c
  2130  000A38  D7FD               	bra	u1297
  2131  000A3A  2E14               	decfsz	??_keypad_scanner^0,f,c
  2132  000A3C  D7FB               	bra	u1297
  2133  000A3E  D000               	nop2	
  2134  000A40                     l99:
  2135  000A40  FFFF               	dw	65535	; assembler added errata NOP
  2136  000A42  A882               	btfss	130,4,c	;volatile
  2137  000A44  EF26  F005         	goto	u21
  2138  000A48  EF29  F005         	goto	u20
  2139  000A4C                     u21:
  2140  000A4C  FFFF               	dw	65535	; assembler added errata NOP
  2141  000A4E  EF20  F005         	goto	l99
  2142  000A52                     u20:
  2143  000A52  FFFF               	dw	65535	; assembler added errata NOP
  2144  000A54  0E2A               	movlw	42
  2145  000A56  EF9B  F006         	goto	l102
  2146  000A5A                     l98:
  2147  000A5A  FFFF               	dw	65535	; assembler added errata NOP
  2148                           
  2149                           ;parkinggarage.c: 121:             if (PORTCbits.RC5 == 0) { _delay((unsigned long)((100
      +                          )*(4000000/4000.0))); while (PORTCbits.RC5==0); return '2'; }
  2150  000A5C  BA82               	btfsc	130,5,c	;volatile
  2151  000A5E  EF33  F005         	goto	u31
  2152  000A62  EF36  F005         	goto	u30
  2153  000A66                     u31:
  2154  000A66  FFFF               	dw	65535	; assembler added errata NOP
  2155  000A68  EF4D  F005         	goto	l103
  2156  000A6C                     u30:
  2157  000A6C  FFFF               	dw	65535	; assembler added errata NOP
  2158  000A6E  0E62               	movlw	98
  2159  000A70  6E14               	movwf	??_keypad_scanner^0,c
  2160  000A72  0E76               	movlw	118
  2161  000A74                     u1307:
  2162  000A74  FFFF               	dw	65535	; errata NOP
  2163  000A76  2EE8               	decfsz	wreg,f,c
  2164  000A78  D7FD               	bra	u1307
  2165  000A7A  2E14               	decfsz	??_keypad_scanner^0,f,c
  2166  000A7C  D7FB               	bra	u1307
  2167  000A7E  D000               	nop2	
  2168  000A80                     l104:
  2169  000A80  FFFF               	dw	65535	; assembler added errata NOP
  2170  000A82  AA82               	btfss	130,5,c	;volatile
  2171  000A84  EF46  F005         	goto	u41
  2172  000A88  EF49  F005         	goto	u40
  2173  000A8C                     u41:
  2174  000A8C  FFFF               	dw	65535	; assembler added errata NOP
  2175  000A8E  EF40  F005         	goto	l104
  2176  000A92                     u40:
  2177  000A92  FFFF               	dw	65535	; assembler added errata NOP
  2178  000A94  0E32               	movlw	50
  2179  000A96  EF9B  F006         	goto	l102
  2180  000A9A                     l103:
  2181  000A9A  FFFF               	dw	65535	; assembler added errata NOP
  2182                           
  2183                           ;parkinggarage.c: 122:             if (PORTCbits.RC6 == 0) { _delay((unsigned long)((100
      +                          )*(4000000/4000.0))); while (PORTCbits.RC6==0); return '3'; }
  2184  000A9C  BC82               	btfsc	130,6,c	;volatile
  2185  000A9E  EF53  F005         	goto	u51
  2186  000AA2  EF56  F005         	goto	u50
  2187  000AA6                     u51:
  2188  000AA6  FFFF               	dw	65535	; assembler added errata NOP
  2189  000AA8  EF6D  F005         	goto	l107
  2190  000AAC                     u50:
  2191  000AAC  FFFF               	dw	65535	; assembler added errata NOP
  2192  000AAE  0E62               	movlw	98
  2193  000AB0  6E14               	movwf	??_keypad_scanner^0,c
  2194  000AB2  0E76               	movlw	118
  2195  000AB4                     u1317:
  2196  000AB4  FFFF               	dw	65535	; errata NOP
  2197  000AB6  2EE8               	decfsz	wreg,f,c
  2198  000AB8  D7FD               	bra	u1317
  2199  000ABA  2E14               	decfsz	??_keypad_scanner^0,f,c
  2200  000ABC  D7FB               	bra	u1317
  2201  000ABE  D000               	nop2	
  2202  000AC0                     l108:
  2203  000AC0  FFFF               	dw	65535	; assembler added errata NOP
  2204  000AC2  AC82               	btfss	130,6,c	;volatile
  2205  000AC4  EF66  F005         	goto	u61
  2206  000AC8  EF69  F005         	goto	u60
  2207  000ACC                     u61:
  2208  000ACC  FFFF               	dw	65535	; assembler added errata NOP
  2209  000ACE  EF60  F005         	goto	l108
  2210  000AD2                     u60:
  2211  000AD2  FFFF               	dw	65535	; assembler added errata NOP
  2212  000AD4  0E33               	movlw	51
  2213  000AD6  EF9B  F006         	goto	l102
  2214  000ADA                     l107:
  2215  000ADA  FFFF               	dw	65535	; assembler added errata NOP
  2216                           
  2217                           ;parkinggarage.c: 125:              PORTCbits.RC0 = 1; PORTCbits.RC1 = 0; PORTCbits.RC2 
      +                          = 1; PORTCbits.RC3 = 1;
  2218  000ADC  8082               	bsf	130,0,c	;volatile
  2219  000ADE  9282               	bcf	130,1,c	;volatile
  2220  000AE0  8482               	bsf	130,2,c	;volatile
  2221  000AE2  8682               	bsf	130,3,c	;volatile
  2222                           
  2223                           ;parkinggarage.c: 126:             if (PORTCbits.RC4 == 0) { _delay((unsigned long)((100
      +                          )*(4000000/4000.0))); while (PORTCbits.RC4==0); return '1'; }
  2224  000AE4  B882               	btfsc	130,4,c	;volatile
  2225  000AE6  EF77  F005         	goto	u71
  2226  000AEA  EF7A  F005         	goto	u70
  2227  000AEE                     u71:
  2228  000AEE  FFFF               	dw	65535	; assembler added errata NOP
  2229  000AF0  EF91  F005         	goto	l111
  2230  000AF4                     u70:
  2231  000AF4  FFFF               	dw	65535	; assembler added errata NOP
  2232  000AF6  0E62               	movlw	98
  2233  000AF8  6E14               	movwf	??_keypad_scanner^0,c
  2234  000AFA  0E76               	movlw	118
  2235  000AFC                     u1327:
  2236  000AFC  FFFF               	dw	65535	; errata NOP
  2237  000AFE  2EE8               	decfsz	wreg,f,c
  2238  000B00  D7FD               	bra	u1327
  2239  000B02  2E14               	decfsz	??_keypad_scanner^0,f,c
  2240  000B04  D7FB               	bra	u1327
  2241  000B06  D000               	nop2	
  2242  000B08                     l112:
  2243  000B08  FFFF               	dw	65535	; assembler added errata NOP
  2244  000B0A  A882               	btfss	130,4,c	;volatile
  2245  000B0C  EF8A  F005         	goto	u81
  2246  000B10  EF8D  F005         	goto	u80
  2247  000B14                     u81:
  2248  000B14  FFFF               	dw	65535	; assembler added errata NOP
  2249  000B16  EF84  F005         	goto	l112
  2250  000B1A                     u80:
  2251  000B1A  FFFF               	dw	65535	; assembler added errata NOP
  2252  000B1C  0E31               	movlw	49
  2253  000B1E  EF9B  F006         	goto	l102
  2254  000B22                     l111:
  2255  000B22  FFFF               	dw	65535	; assembler added errata NOP
  2256                           
  2257                           ;parkinggarage.c: 127:             if (PORTCbits.RC5 == 0) { _delay((unsigned long)((100
      +                          )*(4000000/4000.0))); while (PORTCbits.RC5==0); return '5'; }
  2258  000B24  BA82               	btfsc	130,5,c	;volatile
  2259  000B26  EF97  F005         	goto	u91
  2260  000B2A  EF9A  F005         	goto	u90
  2261  000B2E                     u91:
  2262  000B2E  FFFF               	dw	65535	; assembler added errata NOP
  2263  000B30  EFB1  F005         	goto	l115
  2264  000B34                     u90:
  2265  000B34  FFFF               	dw	65535	; assembler added errata NOP
  2266  000B36  0E62               	movlw	98
  2267  000B38  6E14               	movwf	??_keypad_scanner^0,c
  2268  000B3A  0E76               	movlw	118
  2269  000B3C                     u1337:
  2270  000B3C  FFFF               	dw	65535	; errata NOP
  2271  000B3E  2EE8               	decfsz	wreg,f,c
  2272  000B40  D7FD               	bra	u1337
  2273  000B42  2E14               	decfsz	??_keypad_scanner^0,f,c
  2274  000B44  D7FB               	bra	u1337
  2275  000B46  D000               	nop2	
  2276  000B48                     l116:
  2277  000B48  FFFF               	dw	65535	; assembler added errata NOP
  2278  000B4A  AA82               	btfss	130,5,c	;volatile
  2279  000B4C  EFAA  F005         	goto	u101
  2280  000B50  EFAD  F005         	goto	u100
  2281  000B54                     u101:
  2282  000B54  FFFF               	dw	65535	; assembler added errata NOP
  2283  000B56  EFA4  F005         	goto	l116
  2284  000B5A                     u100:
  2285  000B5A  FFFF               	dw	65535	; assembler added errata NOP
  2286  000B5C  0E35               	movlw	53
  2287  000B5E  EF9B  F006         	goto	l102
  2288  000B62                     l115:
  2289  000B62  FFFF               	dw	65535	; assembler added errata NOP
  2290                           
  2291                           ;parkinggarage.c: 128:             if (PORTCbits.RC6 == 0) { _delay((unsigned long)((100
      +                          )*(4000000/4000.0))); while (PORTCbits.RC6==0); return '6'; }
  2292  000B64  BC82               	btfsc	130,6,c	;volatile
  2293  000B66  EFB7  F005         	goto	u111
  2294  000B6A  EFBA  F005         	goto	u110
  2295  000B6E                     u111:
  2296  000B6E  FFFF               	dw	65535	; assembler added errata NOP
  2297  000B70  EFD1  F005         	goto	l119
  2298  000B74                     u110:
  2299  000B74  FFFF               	dw	65535	; assembler added errata NOP
  2300  000B76  0E62               	movlw	98
  2301  000B78  6E14               	movwf	??_keypad_scanner^0,c
  2302  000B7A  0E76               	movlw	118
  2303  000B7C                     u1347:
  2304  000B7C  FFFF               	dw	65535	; errata NOP
  2305  000B7E  2EE8               	decfsz	wreg,f,c
  2306  000B80  D7FD               	bra	u1347
  2307  000B82  2E14               	decfsz	??_keypad_scanner^0,f,c
  2308  000B84  D7FB               	bra	u1347
  2309  000B86  D000               	nop2	
  2310  000B88                     l120:
  2311  000B88  FFFF               	dw	65535	; assembler added errata NOP
  2312  000B8A  AC82               	btfss	130,6,c	;volatile
  2313  000B8C  EFCA  F005         	goto	u121
  2314  000B90  EFCD  F005         	goto	u120
  2315  000B94                     u121:
  2316  000B94  FFFF               	dw	65535	; assembler added errata NOP
  2317  000B96  EFC4  F005         	goto	l120
  2318  000B9A                     u120:
  2319  000B9A  FFFF               	dw	65535	; assembler added errata NOP
  2320  000B9C  0E36               	movlw	54
  2321  000B9E  EF9B  F006         	goto	l102
  2322  000BA2                     l119:
  2323  000BA2  FFFF               	dw	65535	; assembler added errata NOP
  2324                           
  2325                           ;parkinggarage.c: 131:              PORTCbits.RC0 = 1; PORTCbits.RC1 = 1; PORTCbits.RC2 
      +                          = 0; PORTCbits.RC3 = 1;
  2326  000BA4  8082               	bsf	130,0,c	;volatile
  2327  000BA6  8282               	bsf	130,1,c	;volatile
  2328  000BA8  9482               	bcf	130,2,c	;volatile
  2329  000BAA  8682               	bsf	130,3,c	;volatile
  2330                           
  2331                           ;parkinggarage.c: 132:             if (PORTCbits.RC4 == 0) { _delay((unsigned long)((100
      +                          )*(4000000/4000.0))); while (PORTCbits.RC4==0); return '4'; }
  2332  000BAC  B882               	btfsc	130,4,c	;volatile
  2333  000BAE  EFDB  F005         	goto	u131
  2334  000BB2  EFDE  F005         	goto	u130
  2335  000BB6                     u131:
  2336  000BB6  FFFF               	dw	65535	; assembler added errata NOP
  2337  000BB8  EFF5  F005         	goto	l123
  2338  000BBC                     u130:
  2339  000BBC  FFFF               	dw	65535	; assembler added errata NOP
  2340  000BBE  0E62               	movlw	98
  2341  000BC0  6E14               	movwf	??_keypad_scanner^0,c
  2342  000BC2  0E76               	movlw	118
  2343  000BC4                     u1357:
  2344  000BC4  FFFF               	dw	65535	; errata NOP
  2345  000BC6  2EE8               	decfsz	wreg,f,c
  2346  000BC8  D7FD               	bra	u1357
  2347  000BCA  2E14               	decfsz	??_keypad_scanner^0,f,c
  2348  000BCC  D7FB               	bra	u1357
  2349  000BCE  D000               	nop2	
  2350  000BD0                     l124:
  2351  000BD0  FFFF               	dw	65535	; assembler added errata NOP
  2352  000BD2  A882               	btfss	130,4,c	;volatile
  2353  000BD4  EFEE  F005         	goto	u141
  2354  000BD8  EFF1  F005         	goto	u140
  2355  000BDC                     u141:
  2356  000BDC  FFFF               	dw	65535	; assembler added errata NOP
  2357  000BDE  EFE8  F005         	goto	l124
  2358  000BE2                     u140:
  2359  000BE2  FFFF               	dw	65535	; assembler added errata NOP
  2360  000BE4  0E34               	movlw	52
  2361  000BE6  EF9B  F006         	goto	l102
  2362  000BEA                     l123:
  2363  000BEA  FFFF               	dw	65535	; assembler added errata NOP
  2364                           
  2365                           ;parkinggarage.c: 133:             if (PORTCbits.RC5 == 0) { _delay((unsigned long)((100
      +                          )*(4000000/4000.0))); while (PORTCbits.RC5==0); return '8'; }
  2366  000BEC  BA82               	btfsc	130,5,c	;volatile
  2367  000BEE  EFFB  F005         	goto	u151
  2368  000BF2  EFFE  F005         	goto	u150
  2369  000BF6                     u151:
  2370  000BF6  FFFF               	dw	65535	; assembler added errata NOP
  2371  000BF8  EF15  F006         	goto	l127
  2372  000BFC                     u150:
  2373  000BFC  FFFF               	dw	65535	; assembler added errata NOP
  2374  000BFE  0E62               	movlw	98
  2375  000C00  6E14               	movwf	??_keypad_scanner^0,c
  2376  000C02  0E76               	movlw	118
  2377  000C04                     u1367:
  2378  000C04  FFFF               	dw	65535	; errata NOP
  2379  000C06  2EE8               	decfsz	wreg,f,c
  2380  000C08  D7FD               	bra	u1367
  2381  000C0A  2E14               	decfsz	??_keypad_scanner^0,f,c
  2382  000C0C  D7FB               	bra	u1367
  2383  000C0E  D000               	nop2	
  2384  000C10                     l128:
  2385  000C10  FFFF               	dw	65535	; assembler added errata NOP
  2386  000C12  AA82               	btfss	130,5,c	;volatile
  2387  000C14  EF0E  F006         	goto	u161
  2388  000C18  EF11  F006         	goto	u160
  2389  000C1C                     u161:
  2390  000C1C  FFFF               	dw	65535	; assembler added errata NOP
  2391  000C1E  EF08  F006         	goto	l128
  2392  000C22                     u160:
  2393  000C22  FFFF               	dw	65535	; assembler added errata NOP
  2394  000C24  0E38               	movlw	56
  2395  000C26  EF9B  F006         	goto	l102
  2396  000C2A                     l127:
  2397  000C2A  FFFF               	dw	65535	; assembler added errata NOP
  2398                           
  2399                           ;parkinggarage.c: 134:             if (PORTCbits.RC6 == 0) { _delay((unsigned long)((100
      +                          )*(4000000/4000.0))); while (PORTCbits.RC6==0); return '9'; }
  2400  000C2C  BC82               	btfsc	130,6,c	;volatile
  2401  000C2E  EF1B  F006         	goto	u171
  2402  000C32  EF1E  F006         	goto	u170
  2403  000C36                     u171:
  2404  000C36  FFFF               	dw	65535	; assembler added errata NOP
  2405  000C38  EF35  F006         	goto	l131
  2406  000C3C                     u170:
  2407  000C3C  FFFF               	dw	65535	; assembler added errata NOP
  2408  000C3E  0E62               	movlw	98
  2409  000C40  6E14               	movwf	??_keypad_scanner^0,c
  2410  000C42  0E76               	movlw	118
  2411  000C44                     u1377:
  2412  000C44  FFFF               	dw	65535	; errata NOP
  2413  000C46  2EE8               	decfsz	wreg,f,c
  2414  000C48  D7FD               	bra	u1377
  2415  000C4A  2E14               	decfsz	??_keypad_scanner^0,f,c
  2416  000C4C  D7FB               	bra	u1377
  2417  000C4E  D000               	nop2	
  2418  000C50                     l132:
  2419  000C50  FFFF               	dw	65535	; assembler added errata NOP
  2420  000C52  AC82               	btfss	130,6,c	;volatile
  2421  000C54  EF2E  F006         	goto	u181
  2422  000C58  EF31  F006         	goto	u180
  2423  000C5C                     u181:
  2424  000C5C  FFFF               	dw	65535	; assembler added errata NOP
  2425  000C5E  EF28  F006         	goto	l132
  2426  000C62                     u180:
  2427  000C62  FFFF               	dw	65535	; assembler added errata NOP
  2428  000C64  0E39               	movlw	57
  2429  000C66  EF9B  F006         	goto	l102
  2430  000C6A                     l131:
  2431  000C6A  FFFF               	dw	65535	; assembler added errata NOP
  2432                           
  2433                           ;parkinggarage.c: 137:             PORTCbits.RC0 = 1; PORTCbits.RC1 = 1; PORTCbits.RC2 =
      +                           1; PORTCbits.RC3 = 0;
  2434  000C6C  8082               	bsf	130,0,c	;volatile
  2435  000C6E  8282               	bsf	130,1,c	;volatile
  2436  000C70  8482               	bsf	130,2,c	;volatile
  2437  000C72  9682               	bcf	130,3,c	;volatile
  2438                           
  2439                           ;parkinggarage.c: 138:             if (PORTCbits.RC4 == 0) { _delay((unsigned long)((100
      +                          )*(4000000/4000.0))); while (PORTCbits.RC4==0); return '7'; }
  2440  000C74  B882               	btfsc	130,4,c	;volatile
  2441  000C76  EF3F  F006         	goto	u191
  2442  000C7A  EF42  F006         	goto	u190
  2443  000C7E                     u191:
  2444  000C7E  FFFF               	dw	65535	; assembler added errata NOP
  2445  000C80  EF59  F006         	goto	l135
  2446  000C84                     u190:
  2447  000C84  FFFF               	dw	65535	; assembler added errata NOP
  2448  000C86  0E62               	movlw	98
  2449  000C88  6E14               	movwf	??_keypad_scanner^0,c
  2450  000C8A  0E76               	movlw	118
  2451  000C8C                     u1387:
  2452  000C8C  FFFF               	dw	65535	; errata NOP
  2453  000C8E  2EE8               	decfsz	wreg,f,c
  2454  000C90  D7FD               	bra	u1387
  2455  000C92  2E14               	decfsz	??_keypad_scanner^0,f,c
  2456  000C94  D7FB               	bra	u1387
  2457  000C96  D000               	nop2	
  2458  000C98                     l136:
  2459  000C98  FFFF               	dw	65535	; assembler added errata NOP
  2460  000C9A  A882               	btfss	130,4,c	;volatile
  2461  000C9C  EF52  F006         	goto	u201
  2462  000CA0  EF55  F006         	goto	u200
  2463  000CA4                     u201:
  2464  000CA4  FFFF               	dw	65535	; assembler added errata NOP
  2465  000CA6  EF4C  F006         	goto	l136
  2466  000CAA                     u200:
  2467  000CAA  FFFF               	dw	65535	; assembler added errata NOP
  2468  000CAC  0E37               	movlw	55
  2469  000CAE  EF9B  F006         	goto	l102
  2470  000CB2                     l135:
  2471  000CB2  FFFF               	dw	65535	; assembler added errata NOP
  2472                           
  2473                           ;parkinggarage.c: 139:             if (PORTCbits.RC5 == 0) { _delay((unsigned long)((100
      +                          )*(4000000/4000.0))); while (PORTCbits.RC5==0); return '0'; }
  2474  000CB4  BA82               	btfsc	130,5,c	;volatile
  2475  000CB6  EF5F  F006         	goto	u211
  2476  000CBA  EF62  F006         	goto	u210
  2477  000CBE                     u211:
  2478  000CBE  FFFF               	dw	65535	; assembler added errata NOP
  2479  000CC0  EF79  F006         	goto	l139
  2480  000CC4                     u210:
  2481  000CC4  FFFF               	dw	65535	; assembler added errata NOP
  2482  000CC6  0E62               	movlw	98
  2483  000CC8  6E14               	movwf	??_keypad_scanner^0,c
  2484  000CCA  0E76               	movlw	118
  2485  000CCC                     u1397:
  2486  000CCC  FFFF               	dw	65535	; errata NOP
  2487  000CCE  2EE8               	decfsz	wreg,f,c
  2488  000CD0  D7FD               	bra	u1397
  2489  000CD2  2E14               	decfsz	??_keypad_scanner^0,f,c
  2490  000CD4  D7FB               	bra	u1397
  2491  000CD6  D000               	nop2	
  2492  000CD8                     l140:
  2493  000CD8  FFFF               	dw	65535	; assembler added errata NOP
  2494  000CDA  AA82               	btfss	130,5,c	;volatile
  2495  000CDC  EF72  F006         	goto	u221
  2496  000CE0  EF75  F006         	goto	u220
  2497  000CE4                     u221:
  2498  000CE4  FFFF               	dw	65535	; assembler added errata NOP
  2499  000CE6  EF6C  F006         	goto	l140
  2500  000CEA                     u220:
  2501  000CEA  FFFF               	dw	65535	; assembler added errata NOP
  2502  000CEC  0E30               	movlw	48
  2503  000CEE  EF9B  F006         	goto	l102
  2504  000CF2                     l139:
  2505  000CF2  FFFF               	dw	65535	; assembler added errata NOP
  2506                           
  2507                           ;parkinggarage.c: 140:             if (PORTCbits.RC6 == 0) { _delay((unsigned long)((100
      +                          )*(4000000/4000.0))); while (PORTCbits.RC6==0); return '#'; }
  2508  000CF4  BC82               	btfsc	130,6,c	;volatile
  2509  000CF6  EF7F  F006         	goto	u231
  2510  000CFA  EF82  F006         	goto	u230
  2511  000CFE                     u231:
  2512  000CFE  FFFF               	dw	65535	; assembler added errata NOP
  2513  000D00  EF99  F006         	goto	l945
  2514  000D04                     u230:
  2515  000D04  FFFF               	dw	65535	; assembler added errata NOP
  2516  000D06  0E62               	movlw	98
  2517  000D08  6E14               	movwf	??_keypad_scanner^0,c
  2518  000D0A  0E76               	movlw	118
  2519  000D0C                     u1407:
  2520  000D0C  FFFF               	dw	65535	; errata NOP
  2521  000D0E  2EE8               	decfsz	wreg,f,c
  2522  000D10  D7FD               	bra	u1407
  2523  000D12  2E14               	decfsz	??_keypad_scanner^0,f,c
  2524  000D14  D7FB               	bra	u1407
  2525  000D16  D000               	nop2	
  2526  000D18                     l144:
  2527  000D18  FFFF               	dw	65535	; assembler added errata NOP
  2528  000D1A  AC82               	btfss	130,6,c	;volatile
  2529  000D1C  EF92  F006         	goto	u241
  2530  000D20  EF95  F006         	goto	u240
  2531  000D24                     u241:
  2532  000D24  FFFF               	dw	65535	; assembler added errata NOP
  2533  000D26  EF8C  F006         	goto	l144
  2534  000D2A                     u240:
  2535  000D2A  FFFF               	dw	65535	; assembler added errata NOP
  2536  000D2C  0E23               	movlw	35
  2537  000D2E  EF9B  F006         	goto	l102
  2538  000D32                     l945:
  2539  000D32  FFFF               	dw	65535	; assembler added errata NOP
  2540                           
  2541                           ;parkinggarage.c: 142:         return 'n';
  2542  000D34  0E6E               	movlw	110
  2543  000D36                     l102:
  2544  000D36  FFFF               	dw	65535	; assembler added errata NOP
  2545  000D38  0012               	return		;funcret
  2546  000D3A  FFFF               	dw	65535	; errata NOP
  2547  000D3C                     __end_of_keypad_scanner:
  2548                           	callstack 0
  2549                           
  2550                           	psect	rparam
  2551  0000                     
  2552                           	psect	idloc
  2553                           
  2554                           ;Config register IDLOC0 @ 0x200000
  2555                           ;	unspecified, using default values
  2556  200000                     	org	2097152
  2557  200000  FF                 	db	255
  2558                           
  2559                           ;Config register IDLOC1 @ 0x200001
  2560                           ;	unspecified, using default values
  2561  200001                     	org	2097153
  2562  200001  FF                 	db	255
  2563                           
  2564                           ;Config register IDLOC2 @ 0x200002
  2565                           ;	unspecified, using default values
  2566  200002                     	org	2097154
  2567  200002  FF                 	db	255
  2568                           
  2569                           ;Config register IDLOC3 @ 0x200003
  2570                           ;	unspecified, using default values
  2571  200003                     	org	2097155
  2572  200003  FF                 	db	255
  2573                           
  2574                           ;Config register IDLOC4 @ 0x200004
  2575                           ;	unspecified, using default values
  2576  200004                     	org	2097156
  2577  200004  FF                 	db	255
  2578                           
  2579                           ;Config register IDLOC5 @ 0x200005
  2580                           ;	unspecified, using default values
  2581  200005                     	org	2097157
  2582  200005  FF                 	db	255
  2583                           
  2584                           ;Config register IDLOC6 @ 0x200006
  2585                           ;	unspecified, using default values
  2586  200006                     	org	2097158
  2587  200006  FF                 	db	255
  2588                           
  2589                           ;Config register IDLOC7 @ 0x200007
  2590                           ;	unspecified, using default values
  2591  200007                     	org	2097159
  2592  200007  FF                 	db	255
  2593                           
  2594                           	psect	config
  2595                           
  2596                           ; Padding undefined space
  2597  300000                     	org	3145728
  2598  300000  FF                 	db	255
  2599                           
  2600                           ;Config register CONFIG1H @ 0x300001
  2601                           ;	Oscillator Selection bits
  2602                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
  2603                           ;	Oscillator System Clock Switch Enable bit
  2604                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  2605  300001                     	org	3145729
  2606  300001  27                 	db	39
  2607                           
  2608                           ;Config register CONFIG2L @ 0x300002
  2609                           ;	Power-up Timer Enable bit
  2610                           ;	PWRT = OFF, PWRT disabled
  2611                           ;	Brown-out Reset Enable bit
  2612                           ;	BOR = ON, Brown-out Reset enabled
  2613                           ;	Brown-out Reset Voltage bits
  2614                           ;	BORV = 20, VBOR set to 2.0V
  2615  300002                     	org	3145730
  2616  300002  0F                 	db	15
  2617                           
  2618                           ;Config register CONFIG2H @ 0x300003
  2619                           ;	Watchdog Timer Enable bit
  2620                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2621                           ;	Watchdog Timer Postscale Select bits
  2622                           ;	WDTPS = 128, 1:128
  2623  300003                     	org	3145731
  2624  300003  0E                 	db	14
  2625                           
  2626                           ; Padding undefined space
  2627  300004                     	org	3145732
  2628  300004  FF                 	db	255
  2629                           
  2630                           ;Config register CONFIG3H @ 0x300005
  2631                           ;	CCP2 Mux bit
  2632                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  2633  300005                     	org	3145733
  2634  300005  01                 	db	1
  2635                           
  2636                           ;Config register CONFIG4L @ 0x300006
  2637                           ;	Stack Full/Underflow Reset Enable bit
  2638                           ;	STVR = ON, Stack Full/Underflow will cause RESET
  2639                           ;	Low Voltage ICSP Enable bit
  2640                           ;	LVP = ON, Low Voltage ICSP enabled
  2641                           ;	Background Debugger Enable bit
  2642                           ;	DEBUG = 0x1, unprogrammed default
  2643  300006                     	org	3145734
  2644  300006  85                 	db	133
  2645                           
  2646                           ; Padding undefined space
  2647  300007                     	org	3145735
  2648  300007  FF                 	db	255
  2649                           
  2650                           ;Config register CONFIG5L @ 0x300008
  2651                           ;	Code Protection bit
  2652                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  2653                           ;	Code Protection bit
  2654                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  2655                           ;	Code Protection bit
  2656                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  2657                           ;	Code Protection bit
  2658                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  2659  300008                     	org	3145736
  2660  300008  0F                 	db	15
  2661                           
  2662                           ;Config register CONFIG5H @ 0x300009
  2663                           ;	Boot Block Code Protection bit
  2664                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  2665                           ;	Data EEPROM Code Protection bit
  2666                           ;	CPD = OFF, Data EEPROM not code protected
  2667  300009                     	org	3145737
  2668  300009  C0                 	db	192
  2669                           
  2670                           ;Config register CONFIG6L @ 0x30000A
  2671                           ;	Write Protection bit
  2672                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  2673                           ;	Write Protection bit
  2674                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  2675                           ;	Write Protection bit
  2676                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  2677                           ;	Write Protection bit
  2678                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  2679  30000A                     	org	3145738
  2680  30000A  0F                 	db	15
  2681                           
  2682                           ;Config register CONFIG6H @ 0x30000B
  2683                           ;	Configuration Register Write Protection bit
  2684                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  2685                           ;	Boot Block Write Protection bit
  2686                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  2687                           ;	Data EEPROM Write Protection bit
  2688                           ;	WRTD = OFF, Data EEPROM not write protected
  2689  30000B                     	org	3145739
  2690  30000B  E0                 	db	224
  2691                           
  2692                           ;Config register CONFIG7L @ 0x30000C
  2693                           ;	Table Read Protection bit
  2694                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  2695                           ;	Table Read Protection bit
  2696                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  2697                           ;	Table Read Protection bit
  2698                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  2699                           ;	Table Read Protection bit
  2700                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  2701  30000C                     	org	3145740
  2702  30000C  0F                 	db	15
  2703                           
  2704                           ;Config register CONFIG7H @ 0x30000D
  2705                           ;	Boot Block Table Read Protection bit
  2706                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  2707  30000D                     	org	3145741
  2708  30000D  40                 	db	64
  2709                           tosu	equ	0xFFF
  2710                           tosh	equ	0xFFE
  2711                           tosl	equ	0xFFD
  2712                           stkptr	equ	0xFFC
  2713                           pclatu	equ	0xFFB
  2714                           pclath	equ	0xFFA
  2715                           pcl	equ	0xFF9
  2716                           tblptru	equ	0xFF8
  2717                           tblptrh	equ	0xFF7
  2718                           tblptrl	equ	0xFF6
  2719                           tablat	equ	0xFF5
  2720                           prodh	equ	0xFF4
  2721                           prodl	equ	0xFF3
  2722                           indf0	equ	0xFEF
  2723                           postinc0	equ	0xFEE
  2724                           postdec0	equ	0xFED
  2725                           preinc0	equ	0xFEC
  2726                           plusw0	equ	0xFEB
  2727                           fsr0h	equ	0xFEA
  2728                           fsr0l	equ	0xFE9
  2729                           wreg	equ	0xFE8
  2730                           indf1	equ	0xFE7
  2731                           postinc1	equ	0xFE6
  2732                           postdec1	equ	0xFE5
  2733                           preinc1	equ	0xFE4
  2734                           plusw1	equ	0xFE3
  2735                           fsr1h	equ	0xFE2
  2736                           fsr1l	equ	0xFE1
  2737                           bsr	equ	0xFE0
  2738                           indf2	equ	0xFDF
  2739                           postinc2	equ	0xFDE
  2740                           postdec2	equ	0xFDD
  2741                           preinc2	equ	0xFDC
  2742                           plusw2	equ	0xFDB
  2743                           fsr2h	equ	0xFDA
  2744                           fsr2l	equ	0xFD9
  2745                           status	equ	0xFD8

Data Sizes:
    Strings     101
    Constant    0
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     14      33
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_17(CODE[6]), STR_16(CODE[16]), STR_15(CODE[5]), STR_14(CODE[16]), 
		 -> STR_13(CODE[5]), STR_12(CODE[16]), STR_11(CODE[5]), STR_10(CODE[15]), 
		 -> STR_9(CODE[6]), STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_5(CODE[11]), STR_4(CODE[10]), STR_3(CODE[15]), STR_2(CODE[9]), 
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_Ask_Password
    _main->_Ask_User
    _LCD_Init->_LCD_Command
    _Ask_User->_LCD_GoTo
    _Ask_Password->_LCD_GoTo
    _LCD_String->_LCD_Char
    _LCD_GoTo->_LCD_Command
    _LCD_Clear->_LCD_Command
    _GetKey->_keypad_scanner

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5808
                                             10 COMRAM     4     4      0
                       _Ask_Password
                           _Ask_User
                        _Keypad_Init
                          _LCD_Clear
                           _LCD_Init
                         _LCD_String
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      22
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _Keypad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ask_User                                             2     2      0    2183
                                              8 COMRAM     2     2      0
                             _GetKey
                           _LCD_Char
                          _LCD_Clear
                           _LCD_GoTo
                         _LCD_String
 ---------------------------------------------------------------------------------
 (1) _Ask_Password                                         2     2      0    2183
                                              8 COMRAM     2     2      0
                             _GetKey
                           _LCD_Char
                          _LCD_Clear
                           _LCD_GoTo
                         _LCD_String
 ---------------------------------------------------------------------------------
 (1) _LCD_String                                           2     0      2    1352
                                              1 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_GoTo                                             6     5      1     764
                                              2 COMRAM     6     5      1
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      22
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _GetKey                                               1     1      0      30
                                              1 COMRAM     1     1      0
                     _keypad_scanner
 ---------------------------------------------------------------------------------
 (3) _keypad_scanner                                       1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Ask_Password
     _GetKey
       _keypad_scanner
     _LCD_Char
     _LCD_Clear
       _LCD_Command
     _LCD_GoTo
       _LCD_Command
     _LCD_String
       _LCD_Char
   _Ask_User
     _GetKey
       _keypad_scanner
     _LCD_Char
     _LCD_Clear
       _LCD_Command
     _LCD_GoTo
       _LCD_Command
     _LCD_String
       _LCD_Char
   _Keypad_Init
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String
     _LCD_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      E      21       1       26.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      21      15        0.0%
DATA                 0      0      21       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu May 06 14:48:37 2021

                                                     ?_LCD_Command 0014  
                                                               l85 104E  
                                                               l86 1098  
                                                               l95 11DC  
                                                               l98 0A5A  
                                                               l99 0A40  
                                                               u10 0A2C  
                                                               u11 0A26  
                                                               u20 0A52  
                                                               u21 0A4C  
                                                               u30 0A6C  
                                                               u31 0A66  
                                                               u40 0A92  
                                                               u41 0A8C  
                                                               u50 0AAC  
                                                               u51 0AA6  
                                                               u60 0AD2  
                                                               u61 0ACC  
                                                               u70 0AF4  
                                                               u71 0AEE  
                                                               u80 0B1A  
                                                               u81 0B14  
                                                               u90 0B34  
                                                               u91 0B2E  
                                                      ?_LCD_String 0015  
                                                              l102 0D36  
                                                              l111 0B22  
                                                              l103 0A9A  
                                                              l120 0B88  
                                                              l112 0B08  
                                                              l104 0A80  
                                                              l131 0C6A  
                                                              l123 0BEA  
                                                              l115 0B62  
                                                              l107 0ADA  
                                                              l140 0CD8  
                                                              l132 0C50  
                                                              l124 0BD0  
                                                              l116 0B48  
                                                              l108 0AC0  
                                                              l135 0CB2  
                                                              l127 0C2A  
                                                              l119 0BA2  
                                                              l144 0D18  
                                                              l136 0C98  
                                                              l128 0C10  
                                                              l152 11AC  
                                                              l161 121A  
                                                              l139 0CF2  
                                                              l155 11FE  
                                                              l173 112E  
                                                              l149 1250  
                                                              l158 1246  
                                                              l167 1176  
                                                              l186 0F26  
                                                              l195 0A0C  
                                                              l911 0BE4  
                                                              l903 0B76  
                                                              l921 0C3E  
                                                              l905 0B9C  
                                                              l923 0C64  
                                                              l915 0BFE  
                                                              l941 0D2C  
                                                              l933 0CC6  
                                                              l917 0C24  
                                                              l909 0BBE  
                                                              l935 0CEC  
                                                              l927 0C86  
                                                              l871 0A14  
                                                              l945 0D32  
                                                              l929 0CAC  
                                                              l881 0A94  
                                                              l873 0A2E  
                                                              l961 120A  
                                                              l939 0D06  
                                                              l891 0AF6  
                                                              l875 0A54  
                                                              l963 120C  
                                                              l893 0B1C  
                                                              l885 0AAE  
                                                              l981 11BA  
                                                              l965 120E  
                                                              l887 0AD4  
                                                              l879 0A6E  
                                                              l983 11C2  
                                                              l967 1210  
                                                              l959 1206  
                                                              l897 0B36  
                                                              l985 11DA  
                                                              l899 0B5C  
                                                              l979 11B2  
                                                              _RA0 007C00  
                                                              _RA1 007C01  
                                                              _RA2 007C02  
                                                              u100 0B5A  
                                                              u101 0B54  
                                                              u110 0B74  
                                                              u111 0B6E  
                                                              u200 0CAA  
                                                              u120 0B9A  
                                                              u201 0CA4  
                                                              u121 0B94  
                                                              u210 0CC4  
                                                              u130 0BBC  
                                                              u211 0CBE  
                                                              u131 0BB6  
                                                              u220 0CEA  
                                                              u140 0BE2  
                                                              u221 0CE4  
                                                              u141 0BDC  
                                                              u230 0D04  
                                                              u150 0BFC  
                                                              u231 0CFE  
                                                              u151 0BF6  
                                                              u240 0D2A  
                                                              u160 0C22  
                                                              u241 0D24  
                                                              u161 0C1C  
                                                              u170 0C3C  
                                                              u171 0C36  
                                                              u180 0C62  
                                                              u260 11D8  
                                                              u181 0C5C  
                                                              u261 11D2  
                                                              u190 0C84  
                                                              u191 0C7E  
                                                              u700 10D4  
                                                              u701 10CE  
                                                              u710 10EE  
                                                              u711 10E8  
                                                              u800 0EB0  
                                                              u720 0DAA  
                                                              u801 0EAA  
                                                              u721 0DA4  
                                                              u810 0EC6  
                                                              u730 0DC0  
                                                              u811 0EC0  
                                                              u731 0DBA  
                                                              u900 0786  
                                                              u820 0EDC  
                                                              u740 0DD6  
                                                              u901 0780  
                                                              u821 0ED6  
                                                              u741 0DD0  
                                                              u910 0814  
                                                              u830 0EF2  
                                                              u750 0DEC  
                                                              u911 080E  
                                                              u831 0EEC  
                                                              u751 0DE6  
                                                              u680 1174  
                                                              u920 082A  
                                                              u840 0702  
                                                              u760 0E3A  
                                                              u681 116E  
                                                              u921 0824  
                                                              u841 06FC  
                                                              u761 0E34  
                                                              u690 10C0  
                                                              u930 0840  
                                                              u850 0718  
                                                              u770 0E50  
                                                              u691 10BA  
                                                              u931 083A  
                                                              u851 0712  
                                                              u771 0E4A  
                                                              u940 0856  
                                                              u860 072E  
                                                              u780 0E66  
                                                              u941 0850  
                                                              u861 0728  
                                                              u781 0E60  
                                                              u950 086C  
                                                              u870 0744  
                                                              u790 0E7C  
                                                              u951 0866  
                                                              u871 073E  
                                                              u791 0E76  
                                                              u960 0882  
                                                              u880 075A  
                                                              u961 087C  
                                                              u881 0754  
                                                              u970 0898  
                                                              u890 0770  
                                                              u971 0892  
                                                              u891 076A  
                                                              u980 0906  
                                                              u981 0900  
                                                              u990 091C  
                                                              u991 0916  
                                                              _key 0013  
                                                              wreg 000FE8  
                                                      LCD_Char@dat 0014  
                                                             l1003 124C  
                                                             l1301 11EC  
                                                             l1303 11EE  
                                                             l1311 1152  
                                                             l1313 123A  
                                                             l1321 10F0  
                                                             l1305 1136  
                                                             l1401 0EB2  
                                                             l1323 1104  
                                                             l1315 10AE  
                                                             l1307 113A  
                                                             l1411 0F04  
                                                             l1403 0EC8  
                                                             l1331 118C  
                                                             l1325 1116  
                                                             l1317 10C2  
                                                             l1309 114E  
                                                             l1501 0884  
                                                             l1421 066A  
                                                             l1405 0EDE  
                                                             l1341 11A6  
                                                             l1333 1190  
                                                             l1327 111E  
                                                             l1319 10DA  
                                                             l1511 08C4  
                                                             l1503 089A  
                                                             l1431 0690  
                                                             l1423 066E  
                                                             l1407 0EF4  
                                                             l1415 0F10  
                                                             l1351 0D5E  
                                                             l1343 0D3E  
                                                             l1335 1194  
                                                             l1513 08DC  
                                                             l1505 089E  
                                                             l1521 08F0  
                                                             l1441 06B6  
                                                             l1433 069A  
                                                             l1425 067A  
                                                             l1417 0F16  
                                                             l1409 0EF8  
                                                             l1361 0D84  
                                                             l1353 0D64  
                                                             l1345 0D42  
                                                             l1337 119A  
                                                             l1329 117C  
                                                             l1601 1038  
                                                             l1531 0960  
                                                             l1523 0908  
                                                             l1507 08AA  
                                                             l1451 06DC  
                                                             l1443 06BC  
                                                             l1435 06A0  
                                                             l1427 0684  
                                                             l1371 0DC2  
                                                             l1363 0D8A  
                                                             l1355 0D6E  
                                                             l1347 0D4E  
                                                             l1339 11A0  
                                                             l1611 1052  
                                                             l1603 103A  
                                                             l1541 09B4  
                                                             l1533 0976  
                                                             l1525 091E  
                                                             l1509 08C2  
                                                             l1461 071A  
                                                             l1453 06E2  
                                                             l1445 06C6  
                                                             l1437 06A6  
                                                             l1429 068A  
                                                             l1381 0E06  
                                                             l1373 0DD8  
                                                             l1365 0D90  
                                                             l1357 0D74  
                                                             l1349 0D58  
                                                             l1613 1062  
                                                             l1605 1046  
                                                             l1295 11E4  
                                                             l1543 09B6  
                                                             l1535 098C  
                                                             l1527 0934  
                                                             l1471 0788  
                                                             l1463 0730  
                                                             l1455 06E8  
                                                             l1447 06CC  
                                                             l1439 06B0  
                                                             l1391 0E7E  
                                                             l1375 0DEE  
                                                             l1383 0E24  
                                                             l1367 0D96  
                                                             l1359 0D7A  
                                                             l1615 1074  
                                                             l1297 11E8  
                                                             l1545 09CE  
                                                             l1537 0990  
                                                             l1529 094A  
                                                             l1553 09E2  
                                                             l1481 07CA  
                                                             l1473 078C  
                                                             l1465 0746  
                                                             l1457 06EE  
                                                             l1449 06D2  
                                                             l1393 0E82  
                                                             l1385 0E3C  
                                                             l1377 0DF2  
                                                             l1369 0DAC  
                                                             l1617 109A  
                                                             l1561 0F32  
                                                             l1299 11EA  
                                                             l1555 09E8  
                                                             l1539 099C  
                                                             l1491 0816  
                                                             l1483 07DA  
                                                             l1475 0798  
                                                             l1467 075C  
                                                             l1459 0704  
                                                             l1395 0E8E  
                                                             l1387 0E52  
                                                             l1379 0DFE  
                                                             l1571 0F68  
                                                             l1563 0F36  
                                                             l1557 09F4  
                                                             l1493 082C  
                                                             l1485 07F4  
                                                             l1477 07B0  
                                                             l1469 0772  
                                                             l1389 0E68  
                                                             l1581 0FC0  
                                                             l1573 0F6E  
                                                             l1565 0F3E  
                                                             l1495 0842  
                                                             l1487 07F6  
                                                             l1479 07B2  
                                                             l1399 0E9A  
                                                             l1591 1002  
                                                             l1583 0FC6  
                                                             l1575 0F80  
                                                             l1567 0F4A  
                                                             l1559 0F2C  
                                                             l1497 0858  
                                                             l1489 07FE  
                                                             l1593 1004  
                                                             l1585 0FDE  
                                                             l1577 0F98  
                                                             l1569 0F64  
                                                             l1499 086E  
                                                             l1595 101C  
                                                             l1579 0FA4  
                                                             l1587 0FE2  
                                                             l1597 1022  
                                                             l1589 0FF6  
                                                             l1599 1024  
                                                             STR_1 062F  
                                                             STR_2 0652  
                                                             STR_3 0620  
                                                             STR_4 0648  
                                                             STR_5 063D  
                                                             STR_6 0661  
                                                             STR_7 0661  
                                                             STR_8 0661  
                                                             STR_9 065B  
                                                             u1000 0932  
                                                             u1001 092C  
                                                             u1010 0948  
                                                             u1011 0942  
                                                             u1020 095E  
                                                             u1021 0958  
                                                             u1030 0974  
                                                             u1031 096E  
                                                             u1040 098A  
                                                             u1041 0984  
                                                             u1050 0F7E  
                                                             u1051 0F78  
                                                             u1107 0F54  
                                                             u1060 0F96  
                                                             u1117 0FAE  
                                                             u1061 0F90  
                                                             u1070 0FF4  
                                                             u1207 07E6  
                                                             u1071 0FEE  
                                                             u1127 0FD0  
                                                             u1080 1036  
                                                             u1217 08B4  
                                                             u1081 1030  
                                                             u1137 100E  
                                                             u1090 1096  
                                                             u1307 0A74  
                                                             u1227 08CE  
                                                             u1091 1090  
                                                             u1147 1058  
                                                             u1317 0AB4  
                                                             u1237 09A6  
                                                             u1157 106A  
                                                             _LATB 000F8A  
                                                             u1407 0D0C  
                                                             u1327 0AFC  
                                                             u1247 09C0  
                                                             u1167 1182  
                                                             u1337 0B3C  
                                                             u1257 09FE  
                                                             u1177 0E12  
                                                             u1347 0B7C  
                                                             u1267 1212  
                                                             u1187 07A2  
                                                             u1357 0BC4  
                                                             u1277 1124  
                                                             u1197 07BC  
                                                             u1367 0C04  
                                                             u1287 11F4  
                                                             u1377 0C44  
                                                             u1297 0A34  
                                                             u1387 0C8C  
                                                             u1397 0CCC  
                                             __end_of_Ask_Password 0A12  
                                                             _main 0F2C  
                                               __size_of_LCD_Clear 0012  
                                                             start 0002  
                                                     ___param_bank 000000  
                                                 __end_of_LCD_Char 121E  
                                                 __end_of_LCD_GoTo 1134  
                                                 __end_of_LCD_Init 11B0  
                                                            ?_main 0014  
                                                            STR_10 0611  
                                                            STR_11 0661  
                                                            STR_12 0601  
                                                            STR_13 0661  
                                                            STR_14 0601  
                                                            STR_15 0661  
                                                            STR_16 0601  
                                                            STR_17 065B  
                                                            _LATD0 007C60  
                                                            _LATD1 007C61  
                                                    ??_Keypad_Init 0014  
                                                            _TRISA 000F92  
                                                            _TRISB 000F93  
                                                            _TRISC 000F94  
                                                            _TRISD 000F95  
                                                     LCD_GoTo@line 0016  
                                                            _Pass1 000E  
                                                            _Pass2 000D  
                                                            _Pass3 000C  
                                                            _Pass4 000B  
                                                            _Pass5 000A  
                                                            _User1 0012  
                                                            _User2 0011  
                                                            _User3 0010  
                                                            _UserA 0005  
                                                            _UserB 0003  
                                                            _UserC 0001  
                                                 ??_keypad_scanner 0014  
                                                            main@i 0020  
                                                            tablat 000FF5  
                                                            status 000FD8  
                                              __size_of_LCD_String 0046  
                                                 __end_of_Ask_User 0F2C  
                                                  __initialization 121E  
                                                     __end_of_main 10AA  
                                                           ??_main 001E  
                                                __end_of_LCD_Clear 124A  
                                                    __activetblptr 000001  
                                              __end_of_Keypad_Init 1254  
                                                           _OSCCON 000FD3  
                                                           _GetKey 11B0  
                                                           clear_0 1224  
                                             __size_of_LCD_Command 0022  
                                                     __mediumconst 0000  
                                            __size_of_Ask_Password 03AA  
                                                           tblptrh 000FF7  
                                                           tblptrl 000FF6  
                                                           tblptru 000FF8  
                                                        ?_LCD_Char 0014  
                                                       __accesstop 0080  
                                          __end_of__initialization 122A  
                                                        ?_LCD_GoTo 0016  
                                                        ?_LCD_Init 0014  
                                                    ___rparam_used 000001  
                                                   __pcstackCOMRAM 0014  
                                                     _Ask_Password 0668  
                                                     ??_LCD_String 0017  
                                                      _Keypad_Init 124A  
                                                        ?_Ask_User 0014  
                                                       ??_LCD_Char 0014  
                                                       ??_LCD_GoTo 0017  
                                                       ??_LCD_Init 0016  
                                               __end_of_LCD_String 117A  
                                                          ?_GetKey 0014  
                                                       ??_Ask_User 001C  
                                                   LCD_GoTo@column 001B  
                                                    LCD_String@msg 0015  
                                                  __size_of_GetKey 0030  
                                                          __Hparam 0000  
                                                          __Lparam 0000  
                                                     __psmallconst 0600  
                                                          __pcinit 121E  
                                                          __ramtop 0600  
                                                          __ptext0 0F2C  
                                                          __ptext1 117A  
                                                          __ptext2 124A  
                                                          __ptext3 0D3C  
                                                          __ptext4 0668  
                                                          __ptext5 1134  
                                                          __ptext6 1202  
                                                          __ptext7 10AA  
                                                          __ptext8 1238  
                                                          __ptext9 11E0  
                                                          _vehicle 0007  
                                                        _LCD_Clear 1238  
                                             end_of_initialization 122A  
                                                   LCD_Command@cmd 0015  
                                                        GetKey@key 0015  
                                                     _LCD_GoTo$247 0019  
                                                          postinc0 000FEE  
                                                        _PORTCbits 000F82  
                                                        _PORTDbits 000F83  
                                                       ?_LCD_Clear 0014  
                                                __size_of_LCD_Char 001C  
                                          __size_of_keypad_scanner 032A  
                                                __size_of_LCD_GoTo 008A  
                                                __size_of_LCD_Init 0036  
                                                   __end_of_GetKey 11E0  
                                                    ??_LCD_Command 0014  
                                                     ?_Keypad_Init 0014  
                                                        _EnterUser 000F  
                                              start_initialization 121E  
                                                __size_of_Ask_User 01F0  
                                                         ??_GetKey 0015  
                                              __end_of_LCD_Command 1202  
                                                      __pbssCOMRAM 0001  
                                                      ??_LCD_Clear 0016  
                                                      __smallconst 0600  
                                                         _LCD_Char 1202  
                                                         _LCD_GoTo 10AA  
                                                         _LCD_Init 117A  
                                                   _keypad_scanner 0A12  
                                                      _LCD_Command 11E0  
                                                         _Ask_User 0D3C  
                                             __size_of_Keypad_Init 000A  
                                           __end_of_keypad_scanner 0D3C  
                                                         __Hrparam 0000  
                                                         __Lrparam 0000  
                                                     __Lsmallconst 0600  
                                                    ?_Ask_Password 0014  
                                                         __ptext10 11B0  
                                                         __ptext11 0A12  
                                                  ?_keypad_scanner 0014  
                                                    __size_of_main 017E  
                                                   ??_Ask_Password 001C  
                                                       _LCD_String 1134  
                                                    _EnterPassword 0009  
